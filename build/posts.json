[{"html":"<p>Note:\nI am primarily a practitioner &amp; have not amassed\n  a large reservoir of bibliographic references.\nApologies for ideas have been previously published without being reference.\nI do not include them due to my ignorance or lack of a bibliographic system.\nI gratefully accept any bibliographic references to ideas that I may present.</p>\n<hr>\n<h2 id=\"scope\">Scope</h2>\n<p>This article is primarily scoped to the Ontology of the &quot;Multi Underscore Tag Naming Convention&quot;.\nIn it, the name of this method will be deconstructed, along with the methodology.\nThere will be some treatment into why or the implications of design choices as well,\n  but that will be limited to keep the scope focused on the Ontology.\nEmergent Properties or Gestalt resulting from\n  the combination of multiple elements of this methodology\n  will be given limited treatment, with future posts giving fuller treatments.</p>\n<hr class=\"more\"/>\n\n<h2 id=\"deconstructing-multi-underscore-tag-naming-convention\">Deconstructing &quot;Multi Underscore Tag Naming Convention&quot;</h2>\n<p>A phrase can be treated as a series of tags, which create the context for meaning.</p>\n<p>Ordinally, the phrase &quot;Multi Underscore Tag Naming Convention&quot; can be read\n  left to right, right to left, or from other combinations of ways.\nThe progression of reading each word builds a context.\nThe order (left to right/right to left) of read words, generates a graph of\n  progressive contextual development.</p>\n<h3 id=\"left-to-right-multi-underscore-tag-naming-convention\">Left to Right: Multi Underscore Tag Naming Convention</h3>\n<p>This sequence follows the English rules of Grammar for a phrase.</p>\n<p>The object is &quot;<a target=\"_blank\" href=\"https://en.wiktionary.org/wiki/convention\">Convention</a>&quot;:\n  A practice or procedure widely observed in a group,\n  especially to facilitate social interaction; a custom.  </p>\n<p>The prepositions are:</p>\n<ul>\n<li>Multi Underscore - implying multiple underscore characters <code>_</code></li>\n<li><a target=\"_blank\" href=\"https://en.wiktionary.org/wiki/tag\">Tag</a><ul>\n<li>A keyword, term, or phrase associated with or assigned to data, media,\nand/or information enabling keyword-based classification; often used to categorize content.</li>\n</ul>\n</li>\n<li><a target=\"_blank\" href=\"https://en.wiktionary.org/wiki/naming\">Naming</a><ul>\n<li>The process of giving names to things.</li>\n</ul>\n</li>\n</ul>\n<p>The vector can be used:</p>\n<p>⟨Multi, Underscore, Tag, Naming, Convention⟩</p>\n<p>Subvectors can also be extracted:</p>\n<p>⟨⟨Multi, Underscore⟩, ⟨Tag, ⟨Naming, Convention⟩⟩⟩</p>\n<h3 id=\"right-to-left-convention-naming-tag-underscore-multi\">Right to Left: Convention Naming Tag Underscore Multi</h3>\n<p>If one reads the phrase right to left, while applying the rules of grammar,\n  a different meaning is built from the reversed phrase.</p>\n<p>However, if one treats each word as a Tag, then the mix of Tags, can yield\n  a set of derivative meanings, often related to the primary order of\n  these tags.\nTo stay on scope, this will be left as an exercise to the reader.</p>\n<p>(Multi, Underscore, Tag, Naming, Convention)</p>\n<h2 id=\"constituent-parts\">Constituent Parts</h2>\n<p>What makes a variable name?\nThe rules of the Javascript language will be used as a primary example,\n  with treatments for other languages.</p>\n<p>Javascript allows the alphanumeric characters, <code>_</code>,\n  &amp; <code>$</code> as valid characters to represent the names\n  of variables (which include functions, classes, etc.).\nThe variable name may not begin with a number.\nThe regex for a valid name is <code>/^[a-zA-Z_\\$][a-zA-Z0-9_\\$]*/</code>.</p>\n<p>Other programming languages may use other characters\n  (e.g. Ruby utilizes <code>@</code> to represent an instance variable)\n  or not utilize some characters (e.g. <code>$</code>).\nMost modern programming languages allow alphanumeric characters\n  &amp; underscores <code>_</code> to be used for variable or Type names.</p>\n<h3 id=\"tag\">Tag</h3>\n<p>A tag (T) is composed of a vector of tags or a word.</p>\n<pre>\nT = ⟨T⟩\n</pre>\n\n<pre>\nT<sub>0...i</sub> = ⟨T<sub>0</sub>,...,T<sub>i</sub>⟩\n</pre>\n\n<pre>\nT = ⟨⟨Multi, Underscore⟩, ⟨Tag, ⟨Naming, Convention⟩⟩⟩\n</pre>\n\n<h3 id=\"underscores\">Underscores</h3>\n<p>A vector of <code>_</code> characters have different meanings.</p>\n<h3 id=\"single-underscore-_\">Single Underscore, <code>_</code></h3>\n<p>The Multi Underscore Tag Naming Convention build on the single underscore naming convention.\nA single underscore represents a linkage of words into a single tag.\nThis series reads from general to specific, where the instance type is the last segment,\n  while the context are the beginning segments.</p>\n<p>For example <code>customer_id</code> has the context being <code>customer</code> and the <code>id</code> being the instance type.</p>\n<p>A leading single underscore, <code>_</code>, represents a function that returns the value represented by a Tag.</p>\n<pre>\n`_` = f\n</pre>\n\n<pre>\nf(...) = O<sub>T</sub>\n</pre>\n\n<pre>\ncustomer = _customer()\n</pre>\n\n<p>If there are multiple segments, one can think of a series where each word is passed to the next word.</p>\n<pre>\nmy_customer_id\nT = ⟨my, customer, id⟩\n</pre>\n\n\n<h3 id=\"double-underscore-__\">Double Underscore, <code>__</code></h3>\n<p>A double underscore, <code>__</code>, represents an arrow relation between Tags.</p>\n<pre>\nR = {⟨T<sub>0</sub>, T<sub>1</sub>⟩,...,⟨T<sub>i-1</sub>, T<sub>i</sub>⟩}\n</pre>\n\n<p>A Set of Relations can be reduced into a single Relation.</p>\n<pre>\nR<sub>0,i</sub> = {R<sub>0,1</sub>,...,R<sub>i-1,i</sub>}\n</pre>\n\n<p>Where:</p>\n<pre>\nR = T<sub>0</sub>__T<sub>1</sub>__T<sub>2<sub>0</sub></sub>_T<sub>2<sub>1</sub></sub>__T<sub>3<sub>0</sub></sub>__T<sub>3<sub>1</sub></sub>\n</pre>\n\n<h4 id=\"direction-of-__\">Direction of <code>__</code></h4>\n<p>The Tags are related from specific (i.e. instance) to general (i.e. context).</p>\n<pre>\nR<sub>i<sub>specific</sub>,i<sub>general</sub></sub>\n</pre>\n\n<p>For example:</p>\n<pre>\na1__customer__active\n</pre>\n\n<p>Is a 1-dimensional array (instance) of customer that is of active context.</p>\n<h5 id=\"considerations-for-specific-to-general-ordering\">Considerations for specific to general ordering</h5>\n<p>When working with a value, the instance is the interface to the concept.\nAs demonstrated with &quot;Left to Right&quot; &amp; &quot;Right to Left&quot; deconstruction of the title,\n  Order affects meaning &amp; building of context.\nOrder also has Temporal &amp; Proximal characteristics. </p>\n<h5 id=\"temporal-reasons-for-specific-to-general-ordering\">Temporal reasons for specific to general ordering</h5>\n<p>If one models an agent reading the code at the rate of one Tag per cycle,\n  the <code>T<sub>0</sub></code> is read &amp; processed in 1 cycle &amp; further context is built\n  over subsequent cycles. </p>\n<p>This requires the fewest number of cycles to model the type of instance\n  &amp; related local context.</p>\n<p>Where <code>n</code> is the number of unique Tags in Scope <code>S</code>.</p>\n<pre>\nS = (T<sub>0</sub>,...,T<sub>n</sub>)\n</pre>\n\n<p>If the local programmatic scope is using a set of Tags with different\n  instance types but the same contextual type:</p>\n<pre>\nT<sub>0,0</sub> ≠ T<sub>1,0</sub>\n... \nT<sub>0,i-1</sub> = T<sub>1,i-1</sub>\nT<sub>0,i</sub> = T<sub>1,i</sub>\n</pre>\n\n<p>the programmer can distinguish\n  the different Tags in<code>log n</code> time\n  (vs <code>n</code> time for <code>R<sub>i<sub>general</sub>, i<sub>specific</sub></sub></code>).</p>\n<p>If the local programmatic scope is using a set of Tags with the same\n  instance type but different contextual types:</p>\n<pre>\nT<sub>0,0</sub> = T<sub>1,0</sub>\n... \nT<sub>0,i-1</sub> = T<sub>1,i-1</sub>\nT<sub>0,i</sub> ≠ T<sub>1,i</sub>\n</pre>\n\n<p>it would be <code>n</code> time to distinguish the ordering\n  (vs <code>log n</code> time for <code>R<sub>i<sub>general</sub>, i<sub>specific</sub></sub></code>).</p>\n<p>In this case, it would be faster <code>log n</code> \n  to reverse the Tag reading from context to instance (right to left).</p>\n<p>The effect is the programmer has quick access to the instance type,\n  when reading the Tag forward,\n  while having quick access to the context,\n  when reading the Tag backward.</p>\n<h5 id=\"proximal-reasons-for-specific-to-general-ordering\">Proximal reasons for specific to general ordering</h5>\n<p>When setting a local variable from a Tag, the programmer can use the specific subTag,\n  <code>T<sub>i<sub>specific</sub></sub></code> as the local variable name.\nThis enables shorter local variable    names, assuming local variable names are unique.</p>\n<p><code>T<sub>i<sub>specific</sub></sub></code> is proximally closer to the beginning of the line\n  or the operator token (<code>=</code>, <code>&lt;</code>, <code>&gt;</code>).\nSince <code>T<sub>i<sub>specific</sub></sub></code> is proximally closer,\n  the programmer is more likely to see <code>T<sub>i<sub>specific</sub></sub></code> without having\n  to scan across the line of code.\n<code>T<sub>i<sub>specific</sub></sub></code> is more relevant to the runtime, as it expresses\n  instance Types.</p>\n<h4 id=\"open-ended-double-underscore-__\">Open Ended Double Underscore <code>__</code></h4>\n<p>An open ended <code>__</code> is composed of a subset of the Tags connected to a general context.</p>\n<p>The relation seen above can be reduced in either direction:</p>\n<p>Setting a variable including <code>T<sub>i<sub>specific</sub></sub></code>\n  means the variable is an value of the instance type. </p>\n<pre>\nT<sub>0</sub>__ = T<sub>0</sub>__T<sub>1</sub>__T<sub>2<sub>0</sub></sub>_T<sub>2<sub>1</sub></sub>__T<sub>3<sub>0</sub></sub>__T<sub>3<sub>1</sub></sub>\n</pre>\n\n<p>Setting a variable including <code>T<sub>i<sub>general</sub></sub></code>\n  means the variable is an value tagged with the general type. </p>\n<pre>\n__T<sub>3<sub>0</sub></sub>__T<sub>3<sub>1</sub></sub> = T<sub>0</sub>__T<sub>1</sub>__T<sub>2<sub>0</sub></sub>_T<sub>2<sub>1</sub></sub>__T<sub>3<sub>0</sub></sub>__T<sub>3<sub>1</sub></sub>\n</pre>\n\n<h3 id=\"higher-order-underscores\">Higher order Underscores</h3>\n<p>It is logically possible to have more than 2 underscores have additional meaning.\nWhile I have not encountered a situation where I used more than 2 underscores,\n  it is worth the thought experiment to consider what more that 2 underscores could mean.</p>\n<p>One could relate <code>nth</code> order of logic is the <code>n<sub>underscore</sub></code></p>\n<pre>\nn<sub>order</sub> = n<sub>underscore</sub> - 1\n</pre>\n\n<p>Relating to 1st order logic (<code>_</code>) is an individual Tag.\nRelating to 2nd order logic (<code>__</code>) is a Vector of Tags.\nRelating to 3rd order logic (<code>___</code>) is a Vector of Vectors of Tags.</p>\n<p>It becomes decreasingly practical to a human to use higher order underscores.\nOne way to mitigate is to use a number representing order logic.\nFor example <code>a1_</code> could represent a 1 dimensional array,\n  <code>a3_</code> could represent 3 dimensional array.</p>\n<h3 id=\"triple-underscore-___\">Triple Underscore <code>___</code></h3>\n<p>If we treat 3 underscores as the combination of 1 &amp; 2 underscores,\n  we can model it as a factory of relations,\n  which includes an array (<code><strong>_ball</code>)\n  and a dimension in a matrix (<code>ball</strong>red___cube__green</code>).</p>\n<pre>\n___ball\nball__red__sally___cube__green__bob\n</pre>\n\n<p>As noted previously, more than 2 underscores are difficult for a human to interpret,\n  so this usage will probably not be common.</p>\n<h3 id=\"abbreviations\">Abbreviations</h3>\n<p>Abbreviations can be used for common types, programmatic, or mathematical notation.</p>\n<h4 id=\"a0-9\">a[0-9]+</h4>\n<p><code>a[0-9]+</code> represents an nth dimensional array.</p>\n<p>For example <code>a1__vehicle</code> represents a 1 dimensional array of vehicles,\n  while <code>a2__vehicle</code> represents a 2 dimensional array (array of arrays) of vehicles.</p>\n<h4 id=\"arr\">arr</h4>\n<p><code>arr</code> represents a single dimensional array.\n<code>arr</code> can be join with additional <code>arr</code> to represent higher dimensional arrays.\nFor example, <code>arr__vehicle</code> represent a 1 dimensional array of vehicles,\n  while <code>arr__arr__vehicle</code> represents a 2 dimensional array (array of arrays) of vehicles.</p>\n<h4 id=\"ctx\">ctx</h4>\n<p><code>ctx</code> represents a context object holding data related to the following Tag context.</p>\n<h4 id=\"fn\">fn</h4>\n<p><code>fn</code> represents a function. It is synonymous with a leading <code>_</code>,\n  and used to explicitly mean a function in cases of ambiguity.</p>\n<h4 id=\"idx\">idx</h4>\n<p><code>idx</code> represents an index, of type integer.</p>\n<h3 id=\"txt\">txt</h3>\n<p><code>txt</code> represents text.</p>\n","metadata":{"title":"Multi Underscore Tag Naming Convention Analysis","author":"Brian Takita","date":"4/15/19 16:20","description":"Naming Convention that utilizes underscores to articulate relationships to tags.","intro":"<p>Note:\nI am primarily a practitioner &amp; have not amassed\n  a large reservoir of bibliographic references.\nApologies for ideas have been previously published without being reference.\nI do not include them due to my ignorance or lack of a bibliographic system.\nI gratefully accept any bibliographic references to ideas that I may present.</p>\n<hr>\n<h2 id=\"scope\">Scope</h2>\n<p>This article is primarily scoped to the Ontology of the &quot;Multi Underscore Tag Naming Convention&quot;.\nIn it, the name of this method will be deconstructed, along with the methodology.\nThere will be some treatment into why or the implications of design choices as well,\n  but that will be limited to keep the scope focused on the Ontology.\nEmergent Properties or Gestalt resulting from\n  the combination of multiple elements of this methodology\n  will be given limited treatment, with future posts giving fuller treatments.</p>\n"},"slug":"multi-underscore-tag-naming-convention-analysis","date":"2019-04-15T20:20:00.000Z","txt__date":"4/15/19 16:20","path":"/posts/multi-underscore-tag-naming-convention-analysis","url":"https://briantakita.com/posts/multi-underscore-tag-naming-convention-analysis"},{"html":"<p>Note: The naming convention described in this article\n  <a target=\"_blank\" href=\"/posts/multi-underscore-tag-naming-convention-analysis\">has been named</a>:</p>\n<p>Long form: Multi Underscore Tag Naming Convention</p>\n<p>Medium form: Tag Naming Convention</p>\n<p>Short Form: Tag Naming</p>\n<hr>\n<p>An Abstraction name encodes the meaning &amp; context of the abstraction.\nThe name consists of tags that are joined together to create a name.</p>\n<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Naming_convention_(programming)\">\n  Naming Convention (programming) (Wikipedia)\n</a>\n\n<h2 id=\"discoverability-unique-vs-ambiguous-names\">Discoverability: Unique vs Ambiguous Names</h2>\n<p>A name &amp; tags in the name also acts identifiers to locate\n  the usages of the abstraction in the codebase.\nThis attribute is also known as discoverability.</p>\n<p><a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Discoverability\">Discoverability (Wikipedia)</a></p>\n<p>Unique &amp; Accurate names for abstractions help discoverability.\nAmbiguous names hurt discoverability.</p>\n<p>Advantages for discoverable abstractions include:</p>\n<ul>\n<li>easy searching for an abstraction used across the codebase</li>\n<li>easier refactoring (e.g. a rename refactoring is a search/replace)</li>\n<li>provides a more comprehensive &amp; accurate model of the system in one&#39;s head</li>\n</ul>\n<hr class=\"more\"/>\n\n<h3 id=\"ambiguous-name-example--id\">Ambiguous name Example — <code>id</code></h3>\n<p><code>id</code> fields with context are a good candidate to combine into a single tag.</p>\n<p>Note that it&#39;s advantageous to name a field <code>user.user_id</code>\n  instead of <code>user.id</code> because the abstraction <code>user_id</code> can be located\n    though a search wherever it is used.\nThe convention held by <code>ActiveRecord</code> in <code>Ruby on Rails</code> \n  makes it difficult to find usages of the <code>user_id</code> abstraction,\n  particularly when it is used in objects.\nIn the <code>user</code> object, <code>user_id</code> is named <code>id</code>,\n  which is ambiguous with all the other <code>*_id</code> fields used in all of the other relations.\nFor reason of unambiguous distinction, it is advantageous to always use the same form for <code>user_id</code>.</p>\n<h2 id=\"top-down--bottom-up-design\">Top-down &amp; Bottom-up Design</h2>\n<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Top-down_and_bottom-up_design\">\n  Top-down and bottom-up design (Wikipedia)\n</a>\n\n<p>One can communicate &amp; gain design feedback on a system design by thinking\n  in terms of top-down &amp; bottom-up design.\nThe typical naming convention in software systems is to have a top-down convention\n  where the leftmost part of the name is the most global, becoming more local when moving rightward.</p>\n<p>One can also think bottom-up by moving from the right to the left in a name.\nThinking both top-down &amp; bottom-up is often a useful exercise \n  in understanding &amp; discerning the naming of an abstraction.</p>\n<h2 id=\"underscore_casing\">Underscore_casing</h2>\n<p>Underscore casing separates each word in a tag with an underscore <code>_</code>.\nUnderscores are also used to separate tags when multiple tags are combined to form a name.</p>\n<h2 id=\"camelcasing\">CamelCasing</h2>\n<p>Camel casing is often used for variable &amp; class names.\nWhile that works to identify a name tag,\n  there are ambiguities when composing multiple tags together to form a name.</p>\n<p>For example, the casing may be changed.</p>\n<p><code>const btoaEncodeURIComponentUserJson = btoa(encodeURIComponent(JSON.stringify(user)))</code></p>\n<p>Composing a camelCased tag with underscores removes this ambiguity:</p>\n<p><code>const btoa_encodeURIComponent_user_json = btoa(encodeURIComponent(JSON.stringify(user)))</code></p>\n<h2 id=\"double__underscore__casing-__\">Double__Underscore__Casing (<code>__</code>)</h2>\n<p>Double Underscores are used to aggregate a new chain of tags.</p>\n<h3 id=\"bottom-up-naming\">Bottom-up naming</h3>\n<p>If the typical use case is top-down naming (<code>global_context_mid_context_local</code>),\n  to achieve bottom-up naming, one could use <code>__</code> to join each tag (<code>local__mid_context__global_context</code>).</p>\n<h3 id=\"event-handler-names---__click-as-shorthand-for-onclick\">Event Handler Names - <code>__click</code> as shorthand for <code>onclick</code></h3>\n<p>A name that begins with <code>__</code> can be though of as an unassigned local tag followed by contextual tags.\nThis technique can be used to name event handlers.</p>\n<h3 id=\"context-object-names---__user-as-shorthand-for-ctx__user\">Context Object Names - <code>__user</code> as shorthand for <code>ctx__user</code></h3>\n<p>At times, it may be useful to have a ctx object representing a group of abstractions related to a certain tag.</p>\n<pre><code class=\"language-js\">const __user = {\n  user_name: &#39;Joe&#39;,\n  user_id: 44,\n  user: {user_id: 44, user_name: &#39;Joe&#39;},\n  user_orders_transactions: [{\n    order_transaction_id: 99,\n    order_id: 54\n  }]}</code></pre>\n<h3 id=\"alternate-names---user__\">Alternate names - <code>user__</code></h3>\n<p>If a name is already used within a scope, it may be useful to define an alternate name.\nThis is useful when a function takes an abstraction, clones it, &amp; returns a new version of the abstraction.</p>\n<pre><code class=\"language-js\">async function refresh_user(user) {\n  const {user_id} = user\n  const response = await fetch_user(user_id)\n  const user__ = await response.json()\n  return user__\n}</code></pre>\n<h2 id=\"factory-functions-_sales_report\">Factory Functions <code>_sales_report</code></h2>\n<p>Factory functions are prefixed with a single <code>_</code>,\n  with the name of the created abstraction following.</p>\n<pre><code class=\"language-js\">const sales_report = _sales_report()</code></pre>\n<p>One can visualize the <code>sales_report</code> flowing from the factory <code>_</code>.</p>\n<p>This technique may be useful in breaking down a function into component parts using scoping.\nIn the following example, these queries are run in parallel using <code>async/await</code> &amp; <code>Promise.all</code>.</p>\n<p>Note that in this example,\n  bottom-up naming is used to highlight that <code>results</code> is the type of the abstraction,\n  with the rest of the name being context named top-down.</p>\n<pre><code class=\"language-js\">async function _sales_report() {\n  const [\n    results__sales_aggregate_query,\n    results__sales_regions_query,\n    results__sales_forecast_query\n  ] = await Promise.all([\n    _results__sales_aggregate_query(),\n    _results__sales_regions_query(),\n    _results__sales_forecast_query()\n  ])\n  return {\n    results__sales_aggregate_query,\n    results__sales_regions_query,\n    results__sales_forecast_query\n  }\n  async function _results__sales_aggregate_query() {\n    // ...\n  }\n  async function _results__sales_regions_query() {\n    // ...\n  }\n  async function _results__sales_forecast_query() {\n    // ...\n  }\n}</code></pre>\n","metadata":{"title":"Naming Conventions","author":"Brian Takita","date":"2/27/18 16:30","description":"Naming Conventions to encode the meaning & context of abstractions","intro":"<p>Note: The naming convention described in this article\n  <a target=\"_blank\" href=\"/posts/multi-underscore-tag-naming-convention-analysis\">has been named</a>:</p>\n<p>Long form: Multi Underscore Tag Naming Convention</p>\n<p>Medium form: Tag Naming Convention</p>\n<p>Short Form: Tag Naming</p>\n<hr>\n<p>An Abstraction name encodes the meaning &amp; context of the abstraction.\nThe name consists of tags that are joined together to create a name.</p>\n<a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Naming_convention_(programming)\">\n  Naming Convention (programming) (Wikipedia)\n</a>\n\n<h2 id=\"discoverability-unique-vs-ambiguous-names\">Discoverability: Unique vs Ambiguous Names</h2>\n<p>A name &amp; tags in the name also acts identifiers to locate\n  the usages of the abstraction in the codebase.\nThis attribute is also known as discoverability.</p>\n<p><a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Discoverability\">Discoverability (Wikipedia)</a></p>\n<p>Unique &amp; Accurate names for abstractions help discoverability.\nAmbiguous names hurt discoverability.</p>\n<p>Advantages for discoverable abstractions include:</p>\n<ul>\n<li>easy searching for an abstraction used across the codebase</li>\n<li>easier refactoring (e.g. a rename refactoring is a search/replace)</li>\n<li>provides a more comprehensive &amp; accurate model of the system in one&#39;s head</li>\n</ul>\n"},"slug":"naming-conventions","date":"2018-02-27T21:30:00.000Z","txt__date":"2/27/18 16:30","path":"/posts/naming-conventions","url":"https://briantakita.com/posts/naming-conventions"},{"html":"<p>Now it&#39;s time to implement server side rendering (SSR) using SvelteJS.</p>\n<p>On my current project, I will be migrating from <a href=\"https://pugjs.org\" target=\"_blank\">pug</a> to <a href=\"https://svelte.technology\" target=\"_blank\">sveltejs</a>. The key concepts are <a href=\"https://svelte.technology/guide#server-side-rendering\" target=\"_blank\">Server Side Rendering</a>, <a href=\"https://github.com/sveltejs/svelte/pull/649\" target=\"_blank\">Hydration</a>, &amp; client/server architectural options.</p>\n<hr class=\"more\"/>\n\n<p>SvelteJS allows one to render in dom &amp; server side environments. SSR is simpler than DOM rendering since Svelte does not worry about <code>oncreate</code>, <code>ondestroy</code>, or <code>events</code>, or <code>methods</code>. <code>data</code> &amp; <code>computed properties</code> still work to create the properties and <code>helpers</code> are also available.</p>\n<p>Svelte SSR is fully capable of replacing any server side html/xml templating system. For my current project, I replaced PUG.</p>\n<p>Here&#39;s a relatively full-featured example of the Isomorphic Svelte components that utilize hydration.</p>\n<p>One the server side, the <code>__SSR</code> component (<code>Index__SSR.html</code>) wraps the content (<code>Index.html</code>) component. On the dom, the <code>Index.html</code> component is rehydrated when loaded.</p>\n<p>This allows html to be generated on the server side ()enabling HTTP caching), while allowing dynamic behavior to be <code>rehydrated</code> in the dom.</p>\n<p>All of this happens solely in Svelte components, creating a unified architecture for both server side &amp; dom rendering.</p>\n<script src=\"https://gist.github.com/btakita/842a1b85836768950a5b79fe484abd19.js\"></script>\n","metadata":{"title":"Svelte JS from Pug","author":"Brian Takita","date":"07/22/17 05:00","intro":"<p>Now it&#39;s time to implement server side rendering (SSR) using SvelteJS.</p>\n<p>On my current project, I will be migrating from <a href=\"https://pugjs.org\" target=\"_blank\">pug</a> to <a href=\"https://svelte.technology\" target=\"_blank\">sveltejs</a>. The key concepts are <a href=\"https://svelte.technology/guide#server-side-rendering\" target=\"_blank\">Server Side Rendering</a>, <a href=\"https://github.com/sveltejs/svelte/pull/649\" target=\"_blank\">Hydration</a>, &amp; client/server architectural options.</p>\n"},"slug":"sveltejs-from-pug","date":"2017-07-22T09:00:00.000Z","txt__date":"07/22/17 05:00","path":"/posts/sveltejs-from-pug","url":"https://briantakita.com/posts/sveltejs-from-pug"},{"html":"<p>Creating Web Components/Web Apps has never been more pleasurable.\nIt&#39;s out with the old &amp; in with the new. I converted my client&#39;s project to use Svelte JS from Riot JS. This post highlights some considerations why I chose Svelte &amp; a a sample web component using Svelte.</p>\n<hr class=\"more\"/>\n\n<p><a href=\"https://svelte.technology\" target=\"_blank\">Svelte JS</a> is a build-time isomorphic library that utilizes a transpilation process to build completely self-contained web components.</p>\n<p><a href=\"http://riotjs.com/\" target=\"_blank\">Riot JS</a> is a runtime isomorphic component library.</p>\n<p>I recently <a href=\"/posts/monorepo-static-sites-using-sveltejs-rollup-bash\" target=\"_blank\">converted this site</a> to svelte from metalsmith, which is a static site generator.</p>\n<p>While it&#39;s easy to get stuck into the rat race of endless technological upgrades &amp; porting to the latest hyped piece of tech&hellip;</p>\n<h1 id=\"svelte-js-has-staying-power\">Svelte JS has Staying Power</h1>\n<h2 id=\"performance--memory-usage\">Performance &amp; Memory Usage</h2>\n<p>Despite being a young library, svelte <a href=\"https://rawgit.com/krausest/js-framework-benchmark/master/webdriver-ts-results/table.html\" target=\"_blank\">does quite well</a> on krausest/js-framework-benchmark for Performance &amp; Memory Usage. That&#39;s because, Svelte JS generates optimal javascript while not having the overhead of a runtime library. It&#39;s also going to have an advantage in page load time due to not requiring a runtime library to be loaded.</p>\n<h2 id=\"html-based-components\">HTML-based Components</h2>\n<p>HTML is the lingua franca of the world wide web. HTML the lowest common denominator (developers, designers, non-technical) can work with. With Svelte, the HTML file is converted to be a Component. Components can use other Components.</p>\n<p>I feel confident that I will continue to use Svelte for a long time. Since it&#39;s design is simple &amp; well thought out (all of my use cases were supported with elegance), I don&#39;t expect to have upgrade pains that plague some of the larger frameworks out there.</p>\n<h2 id=\"apis\">APIs</h2>\n<p>Svelte&#39;s api idioms are well thought out. Development flow was coherent natural during the port from Riot.</p>\n<p>For each of my professional clients, I use a monorepo using the <a href=\"https://github.com/ctx-core/ctx-core\" target=\"_blank\">ctx-core</a> toolkit. ctx-core has supporting architecture of a dependency injected ctx (context), agents, &amp; build tools.</p>\n<h2 id=\"example-component\">Example Component</h2>\n<p>Here&#39;s an example component (Dossier__Search). It is composed of a search box, search results, &amp; the detail of the selected person.</p>\n<p>On the top is the html of the component &amp; below is the javascript behavior.</p>\n<p>This example highlights the following features:</p>\n<ul>\n<li>properties</li>\n<li>computed properties</li>\n<li>helpers</li>\n<li>methods</li>\n<li>two-way binding</li>\n<li>sub components</li>\n</ul>\n<p>You can <a href=\"https://svelte.technology/guide\" target=\"_blank\">read more about the features of svelte</a>.</p>\n<script src=\"https://gist.github.com/btakita/786d35c18f001908c59194a8cbfe637c.js\"></script>","metadata":{"title":"Svelte JS from Riot JS","author":"Brian Takita","date":"07/03/17 20:30","intro":"<p>Creating Web Components/Web Apps has never been more pleasurable.\nIt&#39;s out with the old &amp; in with the new. I converted my client&#39;s project to use Svelte JS from Riot JS. This post highlights some considerations why I chose Svelte &amp; a a sample web component using Svelte.</p>\n"},"slug":"sveltejs-from-riotjs","date":"2017-07-04T00:30:00.000Z","txt__date":"07/03/17 20:30","path":"/posts/sveltejs-from-riotjs","url":"https://briantakita.com/posts/sveltejs-from-riotjs"},{"html":"<p>What happens when we become a muse to our tools?</p>\n<p>When YouTube suggests videos that cater to your proclivities, what you see in your feed will be a reflection on your conscious attention domain.</p>\n<p>Would the nature of modern conscious enlightenment be a sort of leveling-up administered by machine learning algorithms?</p>\n<p>Would we be better off if we consciously create &amp; choose our tools? When would it make sense to take what is easily given with all of the consequences? When would it make sense to create a tool that purely fulfills a need without unwanted attachments?</p>\n<p>Some &quot;it depends&quot; questions to consider&hellip;</p>\n<hr class=\"more\"/>\n\n<p>This post was inspired by <a href=\"https://www.youtube.com/watch?v=2QuoMkTCrQU\" target=\"_blank\">Alan Watts</a>.</p>\n","metadata":{"title":"When We become a Muse to Our Tools","author":"Brian Takita","date":"06/11/17 07:00","intro":"<p>What happens when we become a muse to our tools?</p>\n<p>When YouTube suggests videos that cater to your proclivities, what you see in your feed will be a reflection on your conscious attention domain.</p>\n<p>Would the nature of modern conscious enlightenment be a sort of leveling-up administered by machine learning algorithms?</p>\n<p>Would we be better off if we consciously create &amp; choose our tools? When would it make sense to take what is easily given with all of the consequences? When would it make sense to create a tool that purely fulfills a need without unwanted attachments?</p>\n<p>Some &quot;it depends&quot; questions to consider&hellip;</p>\n"},"slug":"when-we-become-a-muse-to-our-tools","date":"2017-06-11T11:00:00.000Z","txt__date":"06/11/17 07:00","path":"/posts/when-we-become-a-muse-to-our-tools","url":"https://briantakita.com/posts/when-we-become-a-muse-to-our-tools"},{"html":"<p>There are many in the UN &amp; global corporate/finance that seek a <a href=\"https://www.wikiwand.com/en/Carbon_tax\" target=\"_blank\">carbon tax</a>. It&#39;s not going to happen but that&#39;s not due to a lack of effort. This is why Trump pulled the US out of the multi-lateral Paris accord. The US was under energy sanctions &amp; the US gave away money to &quot;developing&quot; economies such as China &amp; India. This was a form of sovereign wealth transfer guided by global governance. Fortunately it was voluntary &amp; Trump acted correctly in pulling out of the accord, though the UN is suing to keep the US locked in. Effectively, this is using international trade law to impose governance upon the US.</p>\n<hr class=\"more\"/>\n\n<p>Sovereign problems also occur when the U.N. recommends localities have coordinated mandates, aka Sustainable Development. These initiatives take land off of the market, which hurts people who do not have wealth, because land, home, &amp; rent prices are driven up. Effectively, the people have less housing at a higher price. This in turn increases homelessness &amp; social instability. Bad deal for the US, or any other sovereign nation.</p>\n<p>From the <a href=\"https://www.wikiwand.com/en/United_Nations_Framework_Convention_on_Climate_Change\" target=\"_blank\">UNFCCC</a>, we see &quot;sustainable&quot; initiatives such as &quot;<a href=\"http://americandreamcoalition.org/?page_id=3299\" target=\"_blank\">stack &amp; pack housing</a>&quot;. <a href=\"https://nihrecord.nih.gov/newsletters/2008/07_25_2008/story1.htm\" target=\"_blank\">Experiments</a> have been done on crowding people together. This leads to strained social conditions &amp; even leads to inevitable social collapse.</p>\n<p>I suspect that this is done on purpose to undermine sovereign nations. Even if this is not the intention, we need to be vigilant against the possibility that Entities wish to undermine US sovereignty through various means, obvious &amp; non-obvious.</p>\n<p>Notice that Trump also pulled out of the <a href=\"http://www.foxnews.com/politics/2017/01/23/trump-signs-executive-order-withdrawing-us-from-tpp-trade-deal.html\" target=\"_blank\">TPP</a> &amp; <a href=\"http://www.foxnews.com/politics/2017/04/27/trump-agrees-to-renegotiate-nafta-with-canada-mexico-leaders.html\" target=\"_blank\">NAFTA</a>. These are multi-lateral agreements that reek of global governance. Instead, we need to only have bi-lateral agreements with other nations, to keep the integrity of US sovereignty. This is what <a href=\"https://www.wikiwand.com/en/BRICS\" target=\"_blank\">BRICS</a> is all about.</p>\n","metadata":{"title":"Trump: United States Sovereignty & the United Nations","author":"Brian Takita","date":"06/10/17 13:30","intro":"<p>There are many in the UN &amp; global corporate/finance that seek a <a href=\"https://www.wikiwand.com/en/Carbon_tax\" target=\"_blank\">carbon tax</a>. It&#39;s not going to happen but that&#39;s not due to a lack of effort. This is why Trump pulled the US out of the multi-lateral Paris accord. The US was under energy sanctions &amp; the US gave away money to &quot;developing&quot; economies such as China &amp; India. This was a form of sovereign wealth transfer guided by global governance. Fortunately it was voluntary &amp; Trump acted correctly in pulling out of the accord, though the UN is suing to keep the US locked in. Effectively, this is using international trade law to impose governance upon the US.</p>\n"},"slug":"trump-us-sovereignty-united-nations","date":"2017-06-10T17:30:00.000Z","txt__date":"06/10/17 13:30","path":"/posts/trump-us-sovereignty-united-nations","url":"https://briantakita.com/posts/trump-us-sovereignty-united-nations"},{"html":"<p>BrianTakita.com is now built using a technology chain consisting of <a href=\"https://svelte.technology\" target=\"_blank\">SvelteJS</a>, <a href=\"https://rollupjs.org/\" target=\"_blank\">RollupJS</a>, <a href=\"https://github.com/ctx-core/ctx-core\" target=\"_blank\">ctx-core</a>, &amp; good ol&#39; Bash.</p>\n<p>You can see the source in the <a href=\"https://github.com/btakita/briantakita.com\" target=\"_blank\">briantakita.com</a> repo.</p>\n<hr class=\"more\"/>\n\n<p>I wanted a static site generator that felt like building a custom app, with a <a href=\"https://www.wikiwand.com/en/Domain-driven_design\" target=\"_blank\">domain-driven naming conventions</a>, approachable custom build scripts, &amp; isomorphic javascript.</p>\n<p>This site was build using existing solutions such as <a href=\"http://jekyllrb.com/\" target=\"_blank\">Jekyll</a>, <a href=\"http://wintersmith.io/\" target=\"_blank\">Wintersmith</a>, &amp; <a href=\"http://www.metalsmith.io/\" target=\"_blank\">Metalsmith</a>. When using each of these libraries, I felt the desire to strip away the non-essential code &amp; to have things done my way.</p>\n<p>Some features that I found essential include:</p>\n<ul>\n<li>a development server with watch/build scripts</li>\n<li>generate static html files to serve from github.io</li>\n<li>isomorphic javascript</li>\n</ul>\n<p>With these techs, the following is possible:</p>\n<ul>\n<li>static file builds</li>\n<li>server side rendering</li>\n<li>client side rendering</li>\n</ul>\n<p>This means the entire html page can be rendered using svelte on the server (or static file) &amp; svelte on the client side (for dynamic components). This means there&#39;s no need for other rendering libraries like pug. Only svelte &amp; raw html strings are needed to gain all of the features of dynamic isomorphic components!</p>\n<p>With this retooling, I will begin working on components to enhance the experience of authoring &amp; reading meaning-dense information.</p>\n<p>Stay tuned&hellip;</p>\n","metadata":{"title":"Monorepo Static Sites using Svelte JS, Rollup, ctx-core, & Bash","author":"Brian Takita","date":"6/7/17 5:30","intro":"<p>BrianTakita.com is now built using a technology chain consisting of <a href=\"https://svelte.technology\" target=\"_blank\">SvelteJS</a>, <a href=\"https://rollupjs.org/\" target=\"_blank\">RollupJS</a>, <a href=\"https://github.com/ctx-core/ctx-core\" target=\"_blank\">ctx-core</a>, &amp; good ol&#39; Bash.</p>\n<p>You can see the source in the <a href=\"https://github.com/btakita/briantakita.com\" target=\"_blank\">briantakita.com</a> repo.</p>\n"},"slug":"monorepo-static-sites-using-sveltejs-rollup-bash","date":"2017-06-07T09:30:00.000Z","txt__date":"6/7/17 5:30","path":"/posts/monorepo-static-sites-using-sveltejs-rollup-bash","url":"https://briantakita.com/posts/monorepo-static-sites-using-sveltejs-rollup-bash"},{"html":"<p>It&#39;s been about 2 years since my previous post here.\nI&#39;ve been busy working on a few client projects.\nAs a consultant, I&#39;m naturally inclined to accumulate a toolkit of tech (technology &amp; techniques).\nIn the domain of technology, where all levels of the solution stack are subject to change,\n  keeping a toolkit while moving from project to project is a challenge.</p>\n<hr class=\"more\"/>\n\n<details>\n<summary>Why I choose Javascript</summary>\n<span>\nI'm developing full-stack applications using node.js & es6/es2017.\nAn advantage of web applications written in javascript is the potential\n  to share logic on all levels of the stack.\nFrameworks such as <a href=\"https://www.meteor.com/#!\" target=\"_blank\">Meteor</a>\n  provide full-stack solutions;\n  with the price being lock-in to the design idioms that the framework authors\n  have chosen to support their toolsets.\n</span>\n</details>\n\n<h1 id=\"independenceautonomy\">Independence/Autonomy</h1>\n<p>As desirable features emerge in other libraries,\n  the Framework would need to integrate the new feature.\nIf a library is no longer desirable, it may be difficult to decouple from that library.\nA Framework has inertia.\nOnce a Framework gains a community,\n  it has an obligation to keep a feature set out while maintaining a simple interface.\nThis often has a cost of complexity &amp; loss of freedom to provide additional functionality.</p>\n<p>As any software project (Frameworks included) is used &amp; as new tech emerges,\n  the idioms of the project often change. </p>\n","metadata":{"title":"Monorepo Musings with ctx-core","author":"Brian Takita","date":"2/25/16 11:00","description":"Monorepos Create a Holistic Way to Develop Domains & Platforms","intro":"<p>It&#39;s been about 2 years since my previous post here.\nI&#39;ve been busy working on a few client projects.\nAs a consultant, I&#39;m naturally inclined to accumulate a toolkit of tech (technology &amp; techniques).\nIn the domain of technology, where all levels of the solution stack are subject to change,\n  keeping a toolkit while moving from project to project is a challenge.</p>\n"},"slug":"monorepo-musings-with-ctx-core","date":"2016-02-25T16:00:00.000Z","txt__date":"2/25/16 11:00","path":"/posts/monorepo-musings-with-ctx-core","url":"https://briantakita.com/posts/monorepo-musings-with-ctx-core"},{"html":"<a href=\"/posts/feeling-abstraction/\">\n<img\n  src=\"/images/feeling-abstraction.jpg\"\n  alt=\"Brian Takita - Feeling Abstraction - From http://haiphonghoaphuongdo.blogspot.com/2011/07/colorful-vector-abstraction.html - http://2.bp.blogspot.com/-_t6mHvuNOTs/Th23RDI-RgI/AAAAAAAAAL0/T_VMdr6wIcY/s1600/abstract-vector-free-art.jpg - Licensed under Creative Commons\"\n/>\n</a>\n\n<p>Reductionist mechanisms in Physical Existence are Energy &amp; Energy Transfer. We are all physically made of Energy.</p>\n<p>Feeling an abstract notion such as Energy Transfer may seem tricky; however, it&#39;s simply connection.</p>\n<p>A trick to feeling abstract terms is connect to something more familiar, such as a physical sensation.</p>\n<hr class=\"more\"/>\n\n<p>A form of Energy Transfer is heat transfer. Something feeling hot means Heat (Energy) is transferred to your body from that thing; something feeling cold means Heat is transferred from your body to that thing.</p>\n<p>A simple connection can lead to analogies in similar abstract structures. Like I felt a hot response from her as her attention poured on me; or she seemed cold to my attention.</p>\n<p>Humans create mental models, called abstractions; Whether the abstraction is a word, symbol, picture, a feeling, etc. The identity of that abstraction can be expressed as an explicit title with defined lines, or a fuzzy feeling that is vague and difficult to identify.</p>\n<p>As you focus on an abstraction, observe your feelings; like how you observe a room. Move attention from one spot to another. Flow, zoom in &amp; out. Let the abstractions flow in &amp; out of focus.</p>\n<p>Feel the abstractions around you. Perhaps you can even touch an abstraction. Don&#39;t worry about not being able to name the abstractions or even knowing exactly what is there. Our visual &amp; spatial awareness is a flowing interaction with the environment. Nothing needs to be name when observing.</p>\n<p>And yet, naming something creates a new abstraction. This allows new analogies &amp; systems to be created. New rooms to explore. New things to feel.</p>\n","metadata":{"title":"Feeling Abstraction","author":"Brian Takita","date":"1/17/15 20:00","description":"Reductionist mechanisms in Physical Existence are Energy & Energy Transfer. We are all physically made of Energy. Feeling an abstract notion such as Energy Transfer may seem tricky; however, it's simply connection. A trick to feeling abstract terms is connect to something more familiar, such as a physical sensation.","intro":"<a href=\"/posts/feeling-abstraction/\">\n<img\n  src=\"/images/feeling-abstraction.jpg\"\n  alt=\"Brian Takita - Feeling Abstraction - From http://haiphonghoaphuongdo.blogspot.com/2011/07/colorful-vector-abstraction.html - http://2.bp.blogspot.com/-_t6mHvuNOTs/Th23RDI-RgI/AAAAAAAAAL0/T_VMdr6wIcY/s1600/abstract-vector-free-art.jpg - Licensed under Creative Commons\"\n/>\n</a>\n\n<p>Reductionist mechanisms in Physical Existence are Energy &amp; Energy Transfer. We are all physically made of Energy.</p>\n<p>Feeling an abstract notion such as Energy Transfer may seem tricky; however, it&#39;s simply connection.</p>\n<p>A trick to feeling abstract terms is connect to something more familiar, such as a physical sensation.</p>\n"},"slug":"feeling-abstraction","date":"2015-01-18T01:00:00.000Z","txt__date":"1/17/15 20:00","path":"/posts/feeling-abstraction","url":"https://briantakita.com/posts/feeling-abstraction"},{"html":"<a href=\"/posts/do-not-worry-everything-exists/\">\n  <img\n    src=\"/images/1200px-Creation_of_Adam.jpg\"\n    alt=\"Brian Takita - Do Not Worry, Everything Exists - From Wikipedia http://en.wikipedia.org/wiki/File:Creaci%C3%B3n_de_Ad%C3%A1m.jpg - Licensed under Creative Commons\"\n  />\n</a>\n\n<p>Does God exist? Surely, Santa Claus &amp; Unicorns do not exist. Yet we are talking about them. If they don&#39;t exist, why &amp; how am I talking about them?</p>\n<p>Santa Claus &amp; Unicorns do exist, as fictional characters; more on God later. Everything Exists. The concept conceptually exists. It may also physically exist; like the men who <a href=\"http://www.huffingtonpost.com/2014/12/23/real-santas_n_6366974.html\" target=\"_blank\">name themselves Santa Claus</a>.</p>\n<hr class=\"more\"/>\n\n<p>Surely this must be a cheat; Some sort of sleight of hand; Missing the point. However...</p>\n<h3 id=\"its-all-about-the-context\">It&#39;s All About the Context</h3>\n<p>Words are fuzzy patterns. A word in different situations has a different meaning. A word has different meanings between speaker &amp; listener.</p>\n<p>Adding context gives precise meaning. An atheist can accurately say; God does not exist in my belief system or I don&#39;t believe in God; denying the need for God, yet having compassion for someone else&#39;s belief system. Religious believers can have compassion for all nonbelievers, as there are many interdependent tribes on Earth.</p>\n<h3 id=\"everything-is-governed-by-nature\">Everything is Governed by Nature</h3>\n<p>The nature of Physical &amp; Conceptual Existence follows behaviour that we can study using the arts (spirituality included) &amp; sciences. Supernatural phenomena is caused by unknown Natural Law.</p>\n<h3 id=\"the-nature-of-god-is-defined-by-each-person\">The Nature of God is Defined by each Person</h3>\n<p>God is a concept, who&#39;s meaning is as individual as the person who hold it.</p>\n<p>God, to me, is Existence (conceptual &amp; physical). Every person has a belief system. The simple abstraction of the belief system is the God, even if we don&#39;t call it God.</p>\n<p>God involves creation. Our feelings, thoughts, &amp; actions create God; We can create God the jealous, wrathful, &amp; cruel; We can create God the loving, compassionate, &amp; nurturing.</p>\n<h3 id=\"the-need-for-exoteric-religion\">The Need for Exoteric Religion?</h3>\n<p>A person&#39;s belief system influences the person&#39;s thoughts, actions, &amp; interpretations.</p>\n<p>Some <a href=\"http://en.wikipedia.org/wiki/Exoteric\" target=\"_blank\">Exoteric Religions</a> impose a belief system composed of some outdated traditions. There are unifying ethics that create harmony with self &amp; others, however these ethics can be taught without Exoteric Religion.</p>\n<h3 id=\"our-nature--calling\">Our Nature &amp; Calling</h3>\n<p>Having compassion for ourselves &amp; each other connects us in harmonious interdependence. A symbiotic spiral of evolving intelligence, love, dignity.</p>\n<p>When we love, respect, &amp; have compassion for ourselves &amp; each other, we live.</p>\n","metadata":{"title":"Do Not Worry, Everything Exists","author":"Brian Takita","date":"1/3/15 3:45","description":"Does God exist? Surely, Santa Claus & Unicorns do not exist. Yet we are talking about them. If they don't exist, why & how am I talking about them? Santa Claus & Unicorns do exist, as fictional characters; more on God later. Everything Exists. The concept conceptually exists. It may also physically exist; like the men who name themselves Santa Claus.","image":"http://www.briantakita.com/images/1200px-Creation_of_Adam.jpg","intro":"<a href=\"/posts/do-not-worry-everything-exists/\">\n  <img\n    src=\"/images/1200px-Creation_of_Adam.jpg\"\n    alt=\"Brian Takita - Do Not Worry, Everything Exists - From Wikipedia http://en.wikipedia.org/wiki/File:Creaci%C3%B3n_de_Ad%C3%A1m.jpg - Licensed under Creative Commons\"\n  />\n</a>\n\n<p>Does God exist? Surely, Santa Claus &amp; Unicorns do not exist. Yet we are talking about them. If they don&#39;t exist, why &amp; how am I talking about them?</p>\n<p>Santa Claus &amp; Unicorns do exist, as fictional characters; more on God later. Everything Exists. The concept conceptually exists. It may also physically exist; like the men who <a href=\"http://www.huffingtonpost.com/2014/12/23/real-santas_n_6366974.html\" target=\"_blank\">name themselves Santa Claus</a>.</p>\n"},"slug":"do-not-worry-everything-exists","date":"2015-01-03T08:45:00.000Z","txt__date":"1/3/15 3:45","path":"/posts/do-not-worry-everything-exists","url":"https://briantakita.com/posts/do-not-worry-everything-exists"},{"html":"<a href=\"/posts/why-say-history-when-you-can-say-story/\">\n<img src=\"/images/encyclopedia-britannica.jpg\" alt=\"From http://www.flickr.com/photos/bostontx/4461314652/ - Licensed under Creative Commons\">\n</a>\n\n<p>In culture, we are taught to distinguish history &amp; story as two separate concepts. Some (falsely) think of history being a masculine version of story (his story). However, history &amp; story can be used interchangeably. Here&#39;s why.</p>\n<h2 id=\"a-hrefhttpsgithubcombtakitaphilosophyblobmastersrcstorymd-target_blankstorya\"><a href=\"https://github.com/btakita/philosophy/blob/master/src/story.md\" target=\"_blank\">Story</a></h2>\n<blockquote>\n<p>Story, a recounting of a sequence of events</p>\n</blockquote>\n<p>Our <a href=\"https://github.com/btakita/philosophy/blob/master/src/culture.md\" target=\"_blank\">culture</a> distinguishes a story as being used for entertainment and fiction. Our culture also uses story for an informal narrative for people, animals, etc.</p>\n<h2 id=\"a-hrefhttpsgithubcombtakitaphilosophyblobmastersrchistorymd-target_blankhistorya\"><a href=\"https://github.com/btakita/philosophy/blob/master/src/history.md\" target=\"_blank\">History</a></h2>\n<blockquote>\n<p>History (from Greek ἱστορία, historia, meaning &quot;inquiry, knowledge acquired by investigation&quot;) is the study of the past, particularly how it relates to humans. It is an umbrella term that relates to past events as well as the memory, discovery, collection, organization, presentation, and interpretation of information about these events. Scholars who write about history are called historians. Events occurring prior to written record are considered prehistory.</p>\n</blockquote>\n<blockquote>\n<p>History can also refer to the academic discipline which uses a narrative to examine and analyse a sequence of past events, and objectively determine the patterns of cause and effect that determine them.</p>\n</blockquote>\n<p>Our culture says History is the recorded narrative of the sequence of Human events. However, we&#39;ve heard the usages: The history of human civilization; The history of Mars; The history of the Universe; The history of Middle Earth. The vernacular has expanded the definition of history to include all of time and fiction worlds.</p>\n<p><a href=\"http://en.wikipedia.org/wiki/Biography\" target=\"_blank\">Biographies</a> &amp; <a href=\"http://en.wikipedia.org/wiki/Autobiography\" target=\"_blank\">Autobiographies</a> are also considered history.</p>\n<h2 id=\"story--history-can-be-used-interchangeably\">Story &amp; History can be used Interchangeably</h2>\n<p>We already can use story in place of history since both are a recounting of a &quot;sequence of events&quot;.</p>\n<p>History can also be used in place of story since the vernacular usage of history includes fiction worlds, geological events, &amp; physical events.</p>\n<p>The defining line is blurred. Story &amp; History can be used Interchangeably. The usages of Story &amp; History are connected. Enjoy the connection.</p>\n","metadata":{"title":"Why Say History When You Can Say Story?","author":"Brian Takita","date":"12/19/14 1:50","description":"In culture, we are taught to distinguish history & story as two separate concepts. Some (falsely) think of history being a masculine version of story (his story). However, history & story can be used interchangeably. Here's why.","intro":""},"slug":"why-say-history-when-you-can-say-story","date":"2014-12-19T06:50:00.000Z","txt__date":"12/19/14 1:50","path":"/posts/why-say-history-when-you-can-say-story","url":"https://briantakita.com/posts/why-say-history-when-you-can-say-story"},{"html":"<p style=\"text-align: center; display: block;\">\n  <a href=\"/posts/magic-connections-with-the-philosophy-of-language/\">\n    <img\n      src=\"/images/unicorn.jpg\"\n      alt=\"Brian Takita - Magic Connections with the Philosophy of Language - From http://casiestewart.com/unicornrainbow/ - https://lh4.googleusercontent.com/-ylo97AfxI9c/SuW-sv-oDII/AAAAAAAAGxc/tVIc_fh1A9A/s2048/unicorn.jpg - Licensed under Creative Commons\" style=\"width: 376px; display: inline;\"\n    />\n  </a>\n</p>\n\n<p><a href=\"https://github.com/btakita/philosophy/blob/master/src/magic.md\" target=\"_blank\">Magic</a> exists! Well, if you have listened to me lately, you will hear that <a href=\"https://github.com/btakita/philosophy/blob/master/src/exist.md\" target=\"_blank\">everything exists (including fiction)</a>. When everything exists, we can recapture the entirety of language from those who impose restrictions on <a href=\"https://github.com/btakita/philosophy/blob/master/src/existence.md\" target=\"_blank\">Existence</a>. We have all heard &quot;that does not exist&quot;. We can now say, &quot;that&quot; does exist &amp; &quot;that&quot; is a useful concept.</p>\n<p>I&#39;m happy to see my own homespun approach have a strong connection to an established Philosophical branch. The <a href=\"http://en.wikipedia.org/wiki/Philosophy_of_language\" target=\"_blank\">Philosophy of Language (Wikipedia)</a> brings concepts together into a system of logic to yield magical &amp; insightful connections in Existence.</p>\n<hr class=\"more\"/>\n\n<h2 id=\"my-story-with-magic\">My Story with Magic</h2>\n<p>I&#39;ve always been a daydreaming, fantasy imagining, professing, believer in magic. It&#39;s a fascination that I&#39;ve stubbornly cultivated from childhood, in spite of attempts from others to change my view. I felt judgement &amp; a bit crazy when I spoke, so I ended up not speaking much. I had a strong emotional belief without the rational backing.</p>\n<p>In high school, I had two notable role models who helped set direction to my life. My brother in law who founded a technology company &amp; my physics teacher. It wasn&#39;t the facts that they taught. It was the enthusiastic approach that seemingly unrelated concepts can be connected, yielding novelty &amp; innovation.</p>\n<p>I explored <a href=\"http://en.wikipedia.org/wiki/Engineering_physics\" target=\"_blank\">Engineering Physics</a> in college &amp; found I had a natural aptitude for software development. Ever since I started following the path of a technologist, I&#39;ve wanted to explore the connections between technology &amp; magic.</p>\n<p>My practice started with agile software development as a consultant for startups in San Francisco with Pivotal Computer Systems (now <a href=\"http://pivotallabs.com/author/brian/\" target=\"_blank\">Pivotal Labs</a>). There was a new technique called <a href=\"http://en.wikipedia.org/wiki/Domain-driven_design\" target=\"_blank\">Domain Driven Design (DDD)</a> that was making it&#39;s way around. <a href=\"http://en.wikipedia.org/wiki/Domain-specific_language\" target=\"_blank\">Domain Specific Languages (DSLs)</a> became the rage. I became an early contributor to a <a href=\"http://en.wikipedia.org/wiki/Behavior-driven_development\" target=\"_blank\">Behavior Driven Development (BDD)</a> framework called <a href=\"http://old.rspec.info/community/\" target=\"_blank\">rspec</a>. The premise behind rspec was to make automated testing software look more like the English language.</p>\n<p>Domain Driven Design states coherence is facilitated when members of an organization speak the same domain language language. That means that when everybody in the business uses the same terminology, better overall communication, better overall thought, &amp; more innovative connections. The necessary precision is determined by what the concept is being used for (i.e. a sales presentation or software implementation).</p>\n<p>I also grew up with an interest in <a href=\"https://github.com/btakita/philosophy/blob/master/src/spirituality.md\" target=\"_blank\">spirituality</a> &amp; the nature of Existence. I wanted to unify everything in Existence. What if we use Domain Driven Design principles where the Domain is Existence? Magic!</p>\n<h2 id=\"culture--magic\">Culture &amp; Magic</h2>\n<p>Culture has evolved a definition of <a href=\"http://www.thefreedictionary.com/magic\" target=\"_blank\">Magic (thefreedictionary.com)</a>.</p>\n<blockquote>\n<p>The art that purports to control or forecast natural events, effects, or forces by invoking the supernatural.</p>\n</blockquote>\n<p>Where <a href=\"http://www.thefreedictionary.com/supernatural\" target=\"_blank\">Supernatural (thefreedictionary.com)</a> means.</p>\n<blockquote>\n<p>Of or relating to existence outside the natural world.</p>\n</blockquote>\n<h2 id=\"magic-of-expanding-consciousness\">Magic of Expanding Consciousness</h2>\n<p>The cultural definition is accurate. However, let&#39;s add the qualification that supernatural is defined from the perspective of the <a href=\"https://github.com/btakita/philosophy/blob/master/src/exist.md\" target=\"_blank\">entity</a> that is perceiving the event. That means prehistoric humans will see the thing that creates lightning as being supernatural, because prehistoric humans did not understand weather patterns. Modern humans don&#39;t see the thing that creates lightning as supernatural because there is a natural scientific explanation.</p>\n<p>Taking perspective into account; Magic is the phenomenon that cannot be accurately and/or precisely explained by the context of the entity perceiving the phenomenon.</p>\n<p>This means magic is the awareness &amp; abstraction of the unexplained phenomenon. Magic is tied to Expanding Consciousness, as we attempt to understand the phenomenon. That does not mean we can&#39;t enjoy magic. Magic is motivated by the mystery &amp; wonder as we interact with the unexplained (and unexplainable).</p>\n<p>Even when we can explain the physical process, like the hormonal interactions involved with love, we still experience love as magic. After all, a being in love often does not focus on these chemical interactions.</p>\n<h2 id=\"magic-connections-with-the-philosophy-of-language\">Magic Connections with the Philosophy of Language</h2>\n<p>Not having a formal training in Philosophy, it&#39;s been my pleasure to come across the Philosophy of Language. I&#39;ve arrived at a similar approach from my life experience, however it is great to see that there is a Philosophical tradition with a similar focus.</p>\n<p>It&#39;s quite magical that patterns in Existence repeat in many different Domains. It&#39;s a tragedy culture has separated many Domains in Existence. A notable schism was when rational materialistic science separated from esoteric spirituality.</p>\n<p>Any &quot;ism&quot; tends to restrict the adherent&#39;s scope on Existence, restricting the connections that entity has within Existence. This may rob the adherents to the &quot;ism&quot; the ability to utilize similar patterns in different domains, to make connections with adherents of other domains, and can ultimately lead to objectification of others.</p>\n<p>Language has a magical effect on entities. Language sets the conceptual scope of the entities that communicate with each other. Language also sets the conceptual scope of rational, symbolic logic. Language is spoken by the voice in our heads. Language influences the thoughts &amp; context of the entities that listen.</p>\n<p>Marketing entities understand the power of language &amp; images. That&#39;s why Marketing departments &amp; politicians spend hours picking the right name &amp; terminology. That&#39;s why you see ads defining &amp; redefining words for the audience. That&#39;s why some people are given labels, like &quot;terrorist&quot;, &quot;freedom fighter&quot;, &quot;anarchist&quot;, &quot;republican&quot;, &quot;democrat&quot;, etc. These words affect the perceived identities of the people with the labels. These words make it easy to kill, to oppress, &amp; to ignore.</p>\n<h2 id=\"what-is-language\">What is Language?</h2>\n<p>Language has often been thought of as a human trait.</p>\n<p><a href=\"http://en.wikipedia.org/wiki/Language\" target=\"_blank\">Language (Wikipedia)</a>:</p>\n<blockquote>\n<p>Language is the human ability to acquire and use complex systems of communication, and a language is any specific example of such a system.</p>\n</blockquote>\n<p><a href=\"http://thefreedictionary.com/language\" target=\"_blank\">Language (thefreedictionary.com)</a>:</p>\n<blockquote>\n<p>Communication of thoughts and feelings through a system of arbitrary signals, such as voice sounds, gestures, or written symbols.</p>\n</blockquote>\n<p>We can expand the scope of Language to be utilized by any entity signaling another entity. That means plants have Language (<a href=\"http://www.pbs.org/wnet/nature/what-plants-talk-about-video-full-episode/8243/\" target=\"_blank\">What Plants Talk About</a>). Stars have Language. The Universe itself has Language. Concepts have Language.</p>\n<h2 id=\"awareness-of-the-ecosystem-of-language\">Awareness of the Ecosystem of Language</h2>\n<p>Language is an evolutionary ecosystem of the culture&#39;s mindshare &amp; heartshare by those who propagate definitions &amp; meaning. Language influences (even determines) how we, as a culture, act. We, as participating entities, have the power to be aware of &amp; change the language. We can influence each other to become harmonious, loving, intelligent, peaceful, beautiful, playful, creative, magical.</p>\n<p>Language is also a tool of empowerment. Awareness of context &amp; choice of words effectively shape your mental model &amp; the model of those who listen to you. Language, in it&#39;s many forms, is a key tool that has been Expanding Consciousness of Life.</p>\n<p>Be aware! Expand consciousness! Peace &amp; Love!</p>\n","metadata":{"title":"Magic Connections with the Philosophy of Language","author":"Brian Takita","date":"12/9/14 23:15","description":"Magic exists! Well, if you have listened to me lately, you will hear that everything exists (including fiction). When everything exists, we can recapture the entirety of language from those who impose restrictions on Existence. We have all heard \"that does not exist\". We can now say, \"that\" does exist & \"that\" is a useful concept.","image":"http://www.briantakita.com/images/unicorn.jpg","intro":"<p style=\"text-align: center; display: block;\">\n  <a href=\"/posts/magic-connections-with-the-philosophy-of-language/\">\n    <img\n      src=\"/images/unicorn.jpg\"\n      alt=\"Brian Takita - Magic Connections with the Philosophy of Language - From http://casiestewart.com/unicornrainbow/ - https://lh4.googleusercontent.com/-ylo97AfxI9c/SuW-sv-oDII/AAAAAAAAGxc/tVIc_fh1A9A/s2048/unicorn.jpg - Licensed under Creative Commons\" style=\"width: 376px; display: inline;\"\n    />\n  </a>\n</p>\n\n<p><a href=\"https://github.com/btakita/philosophy/blob/master/src/magic.md\" target=\"_blank\">Magic</a> exists! Well, if you have listened to me lately, you will hear that <a href=\"https://github.com/btakita/philosophy/blob/master/src/exist.md\" target=\"_blank\">everything exists (including fiction)</a>. When everything exists, we can recapture the entirety of language from those who impose restrictions on <a href=\"https://github.com/btakita/philosophy/blob/master/src/existence.md\" target=\"_blank\">Existence</a>. We have all heard &quot;that does not exist&quot;. We can now say, &quot;that&quot; does exist &amp; &quot;that&quot; is a useful concept.</p>\n<p>I&#39;m happy to see my own homespun approach have a strong connection to an established Philosophical branch. The <a href=\"http://en.wikipedia.org/wiki/Philosophy_of_language\" target=\"_blank\">Philosophy of Language (Wikipedia)</a> brings concepts together into a system of logic to yield magical &amp; insightful connections in Existence.</p>\n"},"slug":"magic-connections-with-the-philosophy-of-language","date":"2014-12-10T04:15:00.000Z","txt__date":"12/9/14 23:15","path":"/posts/magic-connections-with-the-philosophy-of-language","url":"https://briantakita.com/posts/magic-connections-with-the-philosophy-of-language"},{"html":"<p>Automated testing helps to ensure that your software does not have regressions as you make changes. These changes include refactorings, new features, bug fixes, etc. A Software product has an intricate set of behavior which includes a large number of edge cases.</p>\n<p>I&#39;m a <a href=\"/posts/automated-black-box-testing/\">fan of black box</a> testing, because it is decoupled from the implementation. The implication is the <a href=\"http://briantakita.wordpress.com/2013/09/15/why-its-better-to-strive-toward-accomplishment-rather-than-method/\" target=\"_blank\"><strong>what</strong> is verified, rather than the <strong>how</strong></a>.</p>\n<hr class=\"more\"/>\n\n<p>Spec frameworks such as rspec and jasmine give you the constructs to perform edge case testing. Unfortunately, the same setup is repeated when verifying different aspects of the state of the system. This leads to long test suites and even to the motivation to skip edge case testing (sacrificing test coverage) or combining tests (sacrificing clarity of intent of the test).</p>\n<p>This juxtaposition led me to create jasmine-flow. The premise of jasmine-flow is to organize tests into a series of steps which you can make assertions up reaching a certain state.</p>\n<pre><code class=\"language-js\">flow(&quot;visit /login|invalid login|valid login&quot;, function(fl) {\n  fl.step(&quot;visit /login&quot;, function() {\n      // I&#39;m assuming the usage a JSDOM here\n      window.location.href = &quot;http://yoursite.com/login&quot;;\n      // setupPage is defined elsewhere to set up your page framework.\n      setupPage();\n    })\n    .aver(&quot;shows a login form&quot;, function() {\n      var $login = $(&quot;#login&quot;);\n      expect($login.length).toEqual(1);\n    })\n\n    .step(&quot;fill out login form with invalid login credentials and submit&quot;, function() {\n      $(&quot;#login .name&quot;).val(&quot;user@example.com&quot;);\n      $(&quot;#login .password&quot;).val(&quot;wrong-password&quot;);\n      $(&quot;#login button&quot;).click();\n      $(&quot;#login&quot;).submit();\n    })\n    .aver(&quot;sends a POST /login with the name and password&quot;, function() {\n      // Using http://github.com/pivotal/jasmine-ajax\n      expect(ajaxRequests.length).toEqual(1);\n      expect(mostRecentAjaxRequest.method).toEqual(&quot;POST&quot;);\n      expect(mostRecentAjaxRequest.url).toEqual(&quot;/login&quot;);\n      expect(JSON.parse(mostRecentAjaxRequest.params)).toEqual({name: &quot;user@example.com&quot;, password: &quot;wrong-password&quot;});\n    })\n    .step(&quot;POST /login 403&quot;, function() {\n      mostRecentAjaxRequest.response({\n        status: 403,\n        responseText: JSON.stringify({\n          message: &quot;Invalid email/password combination&quot;\n        })\n      })\n    })\n    .aver(&quot;does not redirect to the home page&quot;, function() {\n      expect(window.location.href).toEqual(&quot;http://yoursite.com/login&quot;);\n    })\n    .aver(&quot;shows an error&quot;, function() {\n      expect($(&quot;#login .error&quot;).text()).toContain(&quot;Invalid email/password combination&quot;);\n    })\n\n    .step(&quot;fill out login form with valid login credentials and submit&quot;, function() {\n      $(&quot;#login .name&quot;).val(&quot;user@example.com&quot;);\n      $(&quot;#login .password&quot;).val(&quot;12345&quot;);\n      $(&quot;#login button&quot;).click();\n      $(&quot;#login&quot;).submit();\n    })\n    .aver(&quot;sends a POST /login with the name and password&quot;, function() {\n      // Using http://github.com/pivotal/jasmine-ajax\n      expect(ajaxRequests.length).toEqual(2);\n      expect(mostRecentAjaxRequest.method).toEqual(&quot;POST&quot;);\n      expect(mostRecentAjaxRequest.url).toEqual(&quot;/login&quot;);\n      expect(JSON.parse(mostRecentAjaxRequest.params)).toEqual({name: &quot;user@example.com&quot;, password: &quot;12345&quot;});\n    })\n    .step(&quot;POST /login 200&quot;, function() {\n      mostRecentAjaxRequest.response({\n        status: 200,\n        responseText: JSON.stringify({\n          name: &quot;User&quot;,\n          email: &quot;user@example.com&quot;\n        })\n      })\n    .aver(&quot;redirects to the home page&quot;, function() {\n      expect(window.location.href).toEqual(&quot;/&quot;);\n    })\n  ;\n});</code></pre>\n<p>Compare this with the traditional nested describe solution in Jasmine...</p>\n<pre><code class=\"language-js\">describe(&quot;Someone visits /login&quot;, function() {\n  beforeEach(function() {\n    // I&#39;m assuming the usage a JSDOM here\n    window.location.href = &quot;http://yoursite.com/login&quot;;\n    // setupPage is defined elsewhere to set up your page framework.\n    setupPage();\n  });\n\n  it(&quot;shows a login form&quot;, function() {\n    var $login = $(&quot;#login&quot;);\n    expect($login.length).toEqual(1);\n  });\n\n  describe(&quot;fill out and submitting the login form&quot;, function() {\n    beforeEach(function() {\n      $(&quot;#login .name&quot;).val(&quot;user@example.com&quot;);\n      $(&quot;#login .password&quot;).val(&quot;12345&quot;);\n      $(&quot;#login button&quot;).click();\n      $(&quot;#login&quot;).submit();\n    });\n\n    it(&quot;sends a POST /login with the name and password&quot;, function() {\n      // Using http://github.com/pivotal/jasmine-ajax\n      expect(ajaxRequests.length).toEqual(1);\n      expect(mostRecentAjaxRequest.method).toEqual(&quot;POST&quot;);\n      expect(mostRecentAjaxRequest.url).toEqual(&quot;/login&quot;);\n      expect(JSON.parse(mostRecentAjaxRequest.params)).toEqual({name: &quot;user@example.com&quot;, password: &quot;12345&quot;});\n    });\n\n    describe(&quot;POST /login 200&quot;, function() {\n      beforeEach(function() {\n        mostRecentAjaxRequest.response({\n          status: 200,\n          responseText: JSON.stringify({\n            name: &quot;User&quot;,\n            email: &quot;user@example.com&quot;\n          })\n        });\n      });\n\n      it(&quot;redirects to the home page&quot;, function() {\n        expect(window.location.href).toEqual(&quot;/&quot;);\n      });\n    });\n\n    describe(&quot;POST /login 403&quot;, function() {\n      beforeEach(function() {\n        mostRecentAjaxRequest.response({\n          status: 403,\n          responseText: JSON.stringify({\n            message: &quot;Invalid email/password combination&quot;\n          })\n        });\n      });\n\n      it(&quot;does not redirect to the home page&quot;, function() {\n        expect(window.location.href).toEqual(&quot;http://yoursite.com/login&quot;);\n      });\n\n      it(&quot;shows an error&quot;, function() {\n        expect($(&quot;#login .error&quot;).text()).toContain(&quot;Invalid email/password combination&quot;);\n      });\n    });\n  });\n});</code></pre>\n<p>In the nested describe solution, each it requires identical setup code execution which is repeated for each test. This effectively creates a (n log n) test suite for each setup * it. In the jasmine-flow example, the setup code is executed one time, with assertions interspersed (n).</p>\n<p>From a personal experience, I&#39;ve found that it is also easier to organize all of the edge cases since the structure is simpler as a linear flow, opposed to a tree. It&#39;s a bit less pure, but more relevant to linear user actions.</p>\n<p>On my current project, it yielded close to a 10x performance boost to my test suite (400 seconds to 40 seconds). I plan on using this pattern more often, since it also scales in complexity better than a describe (context) tree.</p>\n","metadata":{"title":"Fast and Thorough Testing with Jasmine Flow","author":"Brian Takita","date":"9/14/13 7:00 PM","intro":"<p>Automated testing helps to ensure that your software does not have regressions as you make changes. These changes include refactorings, new features, bug fixes, etc. A Software product has an intricate set of behavior which includes a large number of edge cases.</p>\n<p>I&#39;m a <a href=\"/posts/automated-black-box-testing/\">fan of black box</a> testing, because it is decoupled from the implementation. The implication is the <a href=\"http://briantakita.wordpress.com/2013/09/15/why-its-better-to-strive-toward-accomplishment-rather-than-method/\" target=\"_blank\"><strong>what</strong> is verified, rather than the <strong>how</strong></a>.</p>\n"},"slug":"fast-and-thorough-testing-with-jasmine-flow","date":"2013-09-14T23:00:00.000Z","txt__date":"9/14/13 7:00 PM","path":"/posts/fast-and-thorough-testing-with-jasmine-flow","url":"https://briantakita.com/posts/fast-and-thorough-testing-with-jasmine-flow"},{"html":"<p>Automated testing encourages your software to behave a certain way going forward into the future.</p>\n<p>When you write tests against your user facing requirements (black box and acceptance tests), you locking down how your app acts.</p>\n<p>When you use automated tests for white box testing (unit tests), you lock down how your software is designed.</p>\n<hr class=\"more\"/>\n\n<p>I&#39;ve worked on products which often has changing requirements, and whenever there were unit tests and I needed to make breaking internal changes, I&#39;ve found myself having to make a decision to delete the tests, refactor them, or change the software in a different way.</p>\n<p>That false decision led me to totally eschew white box testing as much as possible in favor of black box testing. It&#39;s been working great, since I&#39;m free to improve the design of the software without being hobbled by irrelevant tests and false positives.</p>\n<p>I also don&#39;t really have any false negatives, because I often don&#39;t care about what I would have unit tested, just the external behavior.</p>\n<p>I do see value of unit tests as a waypoint to help drive along TDD. However these unit tests are not useful, and are often counter productive (because they lock down the current design) as regression tests.</p>\n<p>Log messages to help isolate where things break and they work in production environments to boot. This help alleviate the need for unit tests to isolate breakages.</p>\n","metadata":{"title":"Automated Black Box Testing","author":"Brian Takita","date":"9/14/13 17:31","intro":"<p>Automated testing encourages your software to behave a certain way going forward into the future.</p>\n<p>When you write tests against your user facing requirements (black box and acceptance tests), you locking down how your app acts.</p>\n<p>When you use automated tests for white box testing (unit tests), you lock down how your software is designed.</p>\n"},"slug":"automated-black-box-testing","date":"2013-09-14T21:31:00.000Z","txt__date":"9/14/13 17:31","path":"/posts/automated-black-box-testing","url":"https://briantakita.com/posts/automated-black-box-testing"},{"html":"<p>From my <a href=\"http://briantakita.wordpress.com/2013/09/08/doing-good-in-the-addiction-economy/\" target=\"_blank\">wordpress blog</a></p>\n<p><a href=\"http://kajsotala.fi/2013/09/doing-good-in-the-addiction-economy/\" target=\"_blank\">Doing Good in the Addiction Economy</a></p>\n<p>Interesting but long winded post, IMO. But then, maybe my impatience toward long posts is telling in the short term rewards culture we live in. Of course time is valuable, and trying to get to the core concept of some the writing is often the goal. We don’t seem to savor the journey as much, or the journey has changed to be our lives toward success…</p>\n<hr class=\"more\"/>\n\n<p>America is a culture of accomplishment. We feel the not so subtle urge to be successful, especially in the eyes of our peers. Time is money and there are lots of shiny distractions…</p>\n<p>Of course Japanese also has lots of shiny toys. Japanese culture also has a history toward mastery and zen. That may factor into why students sought to solve the impossible math problem. And then, what is life, perhaps an impossible problem? Maybe I should just enjoy the ride more and not worry about success or what others think of me.</p>\n<p>I do like his usage of meditation to train himself to be more patient. My recent meditation sessions have been shortened by dissatisfaction to time elapsing. There&#39;s always room to improve. We could look at life like an impossible problem, or a journey.</p>\n","metadata":{"title":"\"Re: Doing Good in the Addiction Economy\"","author":"Brian Takita","date":"9/8/13 14:13","intro":"<p>From my <a href=\"http://briantakita.wordpress.com/2013/09/08/doing-good-in-the-addiction-economy/\" target=\"_blank\">wordpress blog</a></p>\n<p><a href=\"http://kajsotala.fi/2013/09/doing-good-in-the-addiction-economy/\" target=\"_blank\">Doing Good in the Addiction Economy</a></p>\n<p>Interesting but long winded post, IMO. But then, maybe my impatience toward long posts is telling in the short term rewards culture we live in. Of course time is valuable, and trying to get to the core concept of some the writing is often the goal. We don’t seem to savor the journey as much, or the journey has changed to be our lives toward success…</p>\n"},"slug":"re-doing-good-in-the-addiction-economy","date":"2013-09-08T18:13:00.000Z","txt__date":"9/8/13 14:13","path":"/posts/re-doing-good-in-the-addiction-economy","url":"https://briantakita.com/posts/re-doing-good-in-the-addiction-economy"},{"html":"<a href=\"/posts/no-privacy-control-your-internet-face/\">\n  <img\n    src=\"http://briantakita.files.wordpress.com/2013/09/4959060_750beab5a4.jpg\"\n    alt=\"Brian Takita - There is no privacy! Control your internet face - Created by tuchodi under the Creative Commons License - http://www.flickr.com/photos/tuchodi/4959060\"\n  />\n</a>\n\n<p>With all of the revelations over how the NSA is snooping over your personal communications, companies storing and controlling your data, encryption backdoors and the fact that it&#39;s always crackable, one thing is becoming clear.</p>\n<hr class=\"more\"/>\n\n<p><strong>There is no privacy on the internet</strong>.</p>\n<p>Ok, maybe if you are really good at covering your tracks, then there is a bit of privacy, but for most people doing most tasks, privacy is an illusion and has been for a while.</p>\n<p>It&#39;s similar to the physical world. The moment you step outside onto a public street, your privacy has ended. Everyone can see you. And it&#39;s ok...</p>\n<p>You want to be well groomed and wear clothes that represent what you want to show to the world. Portray yourself how you want to be viewed. It&#39;s the same thing with the internet.</p>\n<p>So take control over your image. Wear that awesome internet outfit that allows you to express yourself. Adopt your public internet persona. Welcome to a world which should be familiar.</p>\n","metadata":{"title":"There is no privacy! Control your internet face","author":"Brian Takita","date":"9/7/13 21:39","intro":"<a href=\"/posts/no-privacy-control-your-internet-face/\">\n  <img\n    src=\"http://briantakita.files.wordpress.com/2013/09/4959060_750beab5a4.jpg\"\n    alt=\"Brian Takita - There is no privacy! Control your internet face - Created by tuchodi under the Creative Commons License - http://www.flickr.com/photos/tuchodi/4959060\"\n  />\n</a>\n\n<p>With all of the revelations over how the NSA is snooping over your personal communications, companies storing and controlling your data, encryption backdoors and the fact that it&#39;s always crackable, one thing is becoming clear.</p>\n"},"slug":"no-privacy-control-your-internet-face","date":"2013-09-08T01:39:00.000Z","txt__date":"9/7/13 21:39","path":"/posts/no-privacy-control-your-internet-face","url":"https://briantakita.com/posts/no-privacy-control-your-internet-face"},{"html":"<p><a href=\"https://github.com/btakita/philosophy/blob/master/src/existence.md\" target=\"_blank\">Existence</a> (Universe &amp; <a href=\"https://github.com/btakita/philosophy/blob/master/src/nature.md\" target=\"_blank\">nature</a>) evolves as <a href=\"https://github.com/btakita/philosophy/blob/master/src/fractal.md\" target=\"_blank\">fractals</a> over time and space. If you aren&#39;t familiar, here&#39;s a 55 minute documentary. It&#39;s worth watching.</p>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/HvXbQb57lsE\" frameborder=\"0\" allowfullscreen></iframe></p>\n\n<hr class=\"more\"/>\n\n<p>Being in nature, listening to the ocean, listening to a heartbeat. All of these activities are soothing and reduce stress. Existence is full of fractals.</p>\n<p>Even watching a fractal zoom is soothing. Watch this in full screen!</p>\n<p><iframe width=\"420\" height=\"315\" src=\"https://www.youtube.com/embed/PbwaFQ2r2c4\" frameborder=\"0\" allowfullscreen></iframe></p>\n\n<p>It turns out there are some <a href=\"https://www.google.com/search?q=fractal+therapy\" target=\"_blank\">therapies</a> that utilize Fractals. An <a href=\"http://www.psychologytoday.com/blog/codes-joy/201209/fun-fractals\" target=\"_blank\">article in Psychology Today</a> suggests spending 20 minutes a day for a week being exposed to fractals. This could mean being in nature, blowing bubbles, looking at artwork with Fractals...</p>\n<p>With the success of other techniques like <a href=\"https://en.wikipedia.org/wiki/Binaural_beats\" target=\"_blank\">Binaural Beats (Wikipedia)</a> and advances in consumer video devices, like the <a href=\"http://www.oculusvr.com/\" target=\"_blank\">Oculus Rift</a>, therapy is about to become more immersive and available to everyone. Many of these therapies are available free on Youtube.</p>\n<p>The genre of healing audio/video has been around the last few decades and will continue to gain in prevalence as the established medical profession begins to accept these forms of therapy.</p>\n<p>That smells like opportunity to heal people and to have a positive impact on humanity.</p>\n","metadata":{"title":"Fractal Therapy","author":"Brian Takita","date":"9/7/13 3:13 PM","image":"http://www.briantakita.com/images/web-fractal_BloggS74.com_-1024x640.jpg","intro":"<p><a href=\"https://github.com/btakita/philosophy/blob/master/src/existence.md\" target=\"_blank\">Existence</a> (Universe &amp; <a href=\"https://github.com/btakita/philosophy/blob/master/src/nature.md\" target=\"_blank\">nature</a>) evolves as <a href=\"https://github.com/btakita/philosophy/blob/master/src/fractal.md\" target=\"_blank\">fractals</a> over time and space. If you aren&#39;t familiar, here&#39;s a 55 minute documentary. It&#39;s worth watching.</p>\n<p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/HvXbQb57lsE\" frameborder=\"0\" allowfullscreen></iframe></p>\n\n"},"slug":"fractal-therapy","date":"2013-09-07T19:13:00.000Z","txt__date":"9/7/13 3:13 PM","path":"/posts/fractal-therapy","url":"https://briantakita.com/posts/fractal-therapy"},{"html":"<a href=\"/posts/backbone-signal-practical-reactive-programming-in-javascript/\">\n  <img\n    src=\"/images/neurons.jpg\"\n    alt=\"Brian Takita - backbone-signal - Practical Reactive Programming in Javascript - From Parthiv Haldipur http://www.flickr.com/photos/hmmmmm/3903176411/ - Licensed under Creative Commons\"\n  />\n</a>\n\n<p>I have recently released <a href=\"https://github.com/btakita/backbone-signal\" target=\"_blank\">backbone-signal (github.com)</a>, which is a <a href=\"https://en.wikipedia.org/wiki/Reactive_programming\" target=\"_blank\">reactive programming (Wikipedia)</a> library with a practical &amp; javascripty model api.</p>\n<hr class=\"more\"/>\n\n<pre><code class=\"language-js\">// backbone-signal extends Backbone.Model\nvar app = new Backbone.Model();\n\nvar userSignal = app.signal(&quot;user&quot;);\nuserSignal.getTruthy(app, function(app, user) {\n  console.info(&quot;Hello &quot; + user.name);\n});\n\nconsole.info(&quot;Let&#39;s see some friends&quot;);\nuserSignal.set({\n  name: &quot;Jane&quot;\n});\n\nuserSignal.getTruthy(app, function(app, user) {\n  console.info(&quot;Nice to see you&quot;);\n});\n\nuserSignal.set({\n  name: &quot;Joe&quot;\n});\n\nuserSignal.unset();</code></pre>\n<p>The console ouput is:</p>\n<pre><code class=\"language-shell\">    Let&#39;s see some friends\n    Hello Jane\n    Nice to see you\n    Hello Joe\n    Nice to see you</code></pre>\n<p>We are calling getTruthy on the userSignal two times, one for &quot;Hello &quot; + user.name and one for &quot;Nice to see you&quot;. The callback is invoked when the value is <a href=\"http://www.sitepoint.com/javascript-truthy-falsy/\" target=\"_blank\">Truthy</a>. So when userSignal.unset is called, the callbacks are not invoked.</p>\n<p>What is nice about having a dedicated signal object is that you can bind to it even when it&#39;s value is undefined, thereby avoiding order dependencies and simplifying your logic.</p>\n<p>backbone-signal also utilizes Backbone&#39;s listenTo and listenToOnce methods, which make it easy to clean up by calling stopListening on the listener.</p>\n<p>backbone-signal is being used in <a href=\"http://www.rundavoo.com\" target=\"_blank\">www.rundavoo.com</a> and has been fun to use, especially with <a href=\"http://nodejs.org/\" target=\"_blank\">node.js</a> &amp; <a href=\"http://browserify.org/\" target=\"_blank\">Browserify</a>. It&#39;s been a pleasure using a lightweight unframework to freely structure the dataflow logic of the site.</p>\n<p>The api includes:</p>\n<h2 id=\"loadingunloading\">Loading/Unloading</h2>\n<ul>\n<li>load - Invokes the loader when the value is not defined</li>\n<li>forceLoad - Invokes the loader (regardless if the value is defined)</li>\n<li>reload - Unsets the value then invokes the loader</li>\n<li>unload - Invokes the unloader</li>\n<li>setLoader - Sets the Loader callback</li>\n<li>unsetLoader - Unsets the Loader callback</li>\n<li>setUnloader - Sets the Unloader callback</li>\n<li>unsetUnloader - Unsets the Unloader callback</li>\n</ul>\n<h2 id=\"setters\">Setters</h2>\n<ul>\n<li>set - Sets the value with the argument</li>\n<li>unset - Unets the value</li>\n<li>value - Returns the value</li>\n</ul>\n<h2 id=\"getterslisteners\">Getters/Listeners</h2>\n<ul>\n<li>get - Invoke the callback immediately and on any additional changes to the value</li>\n<li>listen - Listen to any additional changes to the value (does not invoke the callback immediately)</li>\n<li>getOnce - Invoke the callback immediately one time</li>\n<li>listenOnce - Listen to any additional changes to the value one time</li>\n<li>getTruthy - Invoke the callback immediately and on any additional changes to the value if the value is truthy</li>\n<li>listenTruthy - Listen to any additional changes to the value if the value is truthy</li>\n<li>getTruthyOnce - Invoke the callback immediately or on any additional changes to the value if the value is truthy one time only</li>\n<li>listenTruthyOnce - Listen to any additional changes to the value if the value is truthy one time only</li>\n<li>getFalsy- Invoke the callback immediately and on any additional changes to the value if the value is falsy</li>\n<li>listenFalsy - Listen to any additional changes to the value if the value is falsy</li>\n<li>getFalsyOnce - Invoke the callback immediately or on any additional changes to the value if the value is falsy one time only</li>\n<li>listenFalsyOnce - Listen to any additional changes to the value if the value is falsy one time only</li>\n<li>getDefined- Invoke the callback immediately and on any additional changes to the value if the value is defined</li>\n<li>listenDefined - Listen to any additional changes to the value if the value is defined</li>\n<li>getDefinedOnce - Invoke the callback immediately or on any additional changes to the value if the value is defined one time only</li>\n<li>listenDefinedOnce - Listen to any additional changes to the value if the value is defined one time only</li>\n<li>unbind - Unbinds the given object from the callback</li>\n<li>loading</li>\n<li>isLoading</li>\n</ul>\n","metadata":{"title":"backbone-signal - Practical Reactive Programming in Javascript","author":"Brian Takita","date":"9/7/13 10:16 AM","intro":"<a href=\"/posts/backbone-signal-practical-reactive-programming-in-javascript/\">\n  <img\n    src=\"/images/neurons.jpg\"\n    alt=\"Brian Takita - backbone-signal - Practical Reactive Programming in Javascript - From Parthiv Haldipur http://www.flickr.com/photos/hmmmmm/3903176411/ - Licensed under Creative Commons\"\n  />\n</a>\n\n<p>I have recently released <a href=\"https://github.com/btakita/backbone-signal\" target=\"_blank\">backbone-signal (github.com)</a>, which is a <a href=\"https://en.wikipedia.org/wiki/Reactive_programming\" target=\"_blank\">reactive programming (Wikipedia)</a> library with a practical &amp; javascripty model api.</p>\n"},"slug":"backbone-signal-practical-reactive-programming-in-javascript","date":"2013-09-07T14:16:00.000Z","txt__date":"9/7/13 10:16 AM","path":"/posts/backbone-signal-practical-reactive-programming-in-javascript","url":"https://briantakita.com/posts/backbone-signal-practical-reactive-programming-in-javascript"},{"html":"<p>I set up <a href=\"http://briantakita.com\" target=\"_blank\">briantakita.com</a> using <a href=\"http://pages.github.com/\" target=\"_blank\">Github Pages</a> &amp; <a href=\"http://www.metalsmith.io/\" target=\"_blank\">metalsmith</a>. Overall, it took some effort to setup &amp; learn, but it turned out to be fairly painless. In this aritcle, I talk about setting up the DNS to point <a href=\"http://briantakita.com\" target=\"_blank\">briantakita.com</a> to btakita.github.io.</p>\n<hr class=\"more\"/>\n\n<p>To set up the DNS, I followed the <a href=\"https://help.github.com/articles/setting-up-a-custom-domain-with-pages\" target=\"_blank\">official instructions</a> and <a href=\"http://davidensinger.com/2013/03/setting-the-dns-for-github-pages-on-namecheap/\" target=\"_blank\">github pages with namecheap</a>.</p>\n<p>I created the CNAME file with:</p>\n<pre><code class=\"language-shell\">briantakita.com</code></pre>\n<p>and set up the DNS on Namecheap.</p>\n<p>However, I got the 404 page on github.</p>\n<p>So I ran</p>\n<pre><code class=\"language-shell\">$ dig briantakita.com +nostats +nocomments +nocmd\n\n; &lt;&lt;&gt;&gt; DiG 9.8.4-rpz2+rl005.12-P1 &lt;&lt;&gt;&gt; briantakita.com +nostats +nocomments +nocmd\n;; global options: +cmd\n;briantakita.com.       IN  A\nbriantakita.com.  1627  IN  A 204.232.175.78\n\n$ dig www.briantakita.com +nostats +nocomments +nocmd\n\n; &lt;&lt;&gt;&gt; DiG 9.8.4-rpz2+rl005.12-P1 &lt;&lt;&gt;&gt; www.briantakita.com +nostats +nocomments +nocmd\n;; global options: +cmd\n;www.briantakita.com.       IN  A\nwww.briantakita.com.  1800  IN  CNAME    btakita.github.io.\nbtakita.github.io.    2163  IN  CNAME    github.map.fastly.net.\ngithub.map.fastly.net.  29  IN  A    199.27.77.133</code></pre>\n<p>What&#39;s this github.map.fastly.net? It looks like it related to github pages routing.</p>\n<p>Anyways, it remained for a few minutes and then went away.</p>\n<p>Some likely culprits are browser cache, some sort of propagation time in the Github platform, or something else entirely.</p>\n<p>I don&#39;t think it was a browser cache because this was the first time I visited briantakita.com being routed to github pages. That leaves it being a propagation time issue or something else. While I believe it was propagation time, I&#39;m not sure.</p>\n<p>I also am just going to move on and leave it at that. Please comment if you run into the same issue or if you can confirm the issue.</p>\n","metadata":{"title":"Github Pages Custom DNS Gotcha","author":"Brian Takita","date":"9/4/13 23:53","intro":"<p>I set up <a href=\"http://briantakita.com\" target=\"_blank\">briantakita.com</a> using <a href=\"http://pages.github.com/\" target=\"_blank\">Github Pages</a> &amp; <a href=\"http://www.metalsmith.io/\" target=\"_blank\">metalsmith</a>. Overall, it took some effort to setup &amp; learn, but it turned out to be fairly painless. In this aritcle, I talk about setting up the DNS to point <a href=\"http://briantakita.com\" target=\"_blank\">briantakita.com</a> to btakita.github.io.</p>\n"},"slug":"github-pages-custom-dns-gotcha","date":"2013-09-05T03:53:00.000Z","txt__date":"9/4/13 23:53","path":"/posts/github-pages-custom-dns-gotcha","url":"https://briantakita.com/posts/github-pages-custom-dns-gotcha"},{"html":"<p>The wonderful web makes it very easy for someone to publish their thoughts and opinions, good and bad, true and false. If you find yourself at the wrong end of a post that shows up in your Google results, the implications can be very damaging. It ceases to be a matter of truth, but a matter of marketing.</p>\n<p>Fortunately, you can take control over your name on the web, without having to spend thousands of dollars that online reputation repair firms charge.</p>\n<hr class=\"more\"/>\n\n<p><a href=\"http://brandyourself.com\" target=\"_blank\">Brandyourself.com</a> makes it easy to inexpensively control your SEO destiny. Here is my <a href=\"http://briantakita.brandyourself.com/\" target=\"_blank\">profile</a>.</p>\n<p>Their free plan has a limitation of setting up three links for the free plan, so I bought their &quot;Premium Membership&quot; giving me unlimited links for $9 every 3 months. This should give me an initial bump. Since I just acquired <a href=\"http://www.briantakita.com\" target=\"_blank\">briantakita.com</a>, I can transfer the links to my blog after the 3 months.</p>\n<p>Now I sit back and wait for Google to index the results :-)</p>\n","metadata":{"title":"DIY SEO with BrandYourself.com","author":"Brian Takita","date":"9/4/13 22:07","intro":"<p>The wonderful web makes it very easy for someone to publish their thoughts and opinions, good and bad, true and false. If you find yourself at the wrong end of a post that shows up in your Google results, the implications can be very damaging. It ceases to be a matter of truth, but a matter of marketing.</p>\n<p>Fortunately, you can take control over your name on the web, without having to spend thousands of dollars that online reputation repair firms charge.</p>\n"},"slug":"diy-seo","date":"2013-09-05T02:07:00.000Z","txt__date":"9/4/13 22:07","path":"/posts/diy-seo","url":"https://briantakita.com/posts/diy-seo"}]