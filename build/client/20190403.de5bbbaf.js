import { a as SvelteComponentDev, b as init, c as safe_not_equal, s as element, w as space, v as text, f as claim_element, g as children, h as detach, x as claim_text, j as add_location, k as insert, z as append, q as mount_component } from './chunk.1987d881.js';
import { a as A } from './chunk.326a4a87.js';
import './chunk.cd7ed10c.js';
import { a as Date__Local } from './chunk.76d13346.js';

/* src/routes/archive/20190403.html generated by Svelte v3.4.1 */

const file = "src/routes/archive/20190403.html";

// (13:7) <A href="/archive">
function create_default_slot_11(ctx) {
	var t;

	return {
		c: function create() {
			t = text("archived");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "archived");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (14:17) <A href="/blog">
function create_default_slot_10(ctx) {
	var t;

	return {
		c: function create() {
			t = text("blog");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "blog");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (18:12) <A href="https://github.com/btakita/briantakita.com">
function create_default_slot_9(ctx) {
	var t;

	return {
		c: function create() {
			t = text("source code");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "source code");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (24:48) <A href="/posts/naming-conventions">
function create_default_slot_8(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Naming Conventions");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Naming Conventions");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (33:19) <A href="https://v3.svelte.technology/">
function create_default_slot_7(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Svelte (v3)");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Svelte (v3)");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (34:2) <A href="https://sapper.svelte.technology/">
function create_default_slot_6(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Sapper");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Sapper");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (43:33) <A href="https://holochain.org/">
function create_default_slot_5(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Holochain");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Holochain");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (44:11) <A href="https://medium.com/sunyatax">
function create_default_slot_4(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Eric Yang");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Eric Yang");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (45:13) <A href="https://holo.host/project/junto/">
function create_default_slot_3(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Junto");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Junto");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (51:5) <A href="https://github.com/holochain/holochain-proto/blob/whitepaper/holochain.pdf">
function create_default_slot_2(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Holochain Whitepaper");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Holochain Whitepaper");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (52:5) <A href="https://files.holo.host/2017/11/Holo-Currency-White-Paper_2017-11-28.pdf">
function create_default_slot_1(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Holo Currency Paper");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Holo Currency Paper");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

// (53:5) <A href="https://files.holo.host/2018/03/Holo-Green-Paper.pdf">
function create_default_slot(ctx) {
	var t;

	return {
		c: function create() {
			t = text("Holo Green Paper");
		},

		l: function claim(nodes) {
			t = claim_text(nodes, "Holo Green Paper");
		},

		m: function mount(target, anchor) {
			insert(target, t, anchor);
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(t);
			}
		}
	};
}

function create_fragment(ctx) {
	var header, p0, span, t0, h2, t1, t2, p1, t3, t4, t5, t6, p2, t7, t8, t9, h30, t10, t11, p3, t12, t13, t14, h31, t15, t16, p4, t17, t18, t19, t20, h32, t21, t22, p5, t23, t24, t25, t26, t27, p6, t28, t29, ul, li0, t30, li1, t31, li2, t32, p7, t33, current;

	var date__local = new Date__Local({
		props: { date: "2019-04-03" },
		$$inline: true
	});

	var a0 = new A({
		props: {
		href: "/archive",
		$$slots: { default: [create_default_slot_11] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var a1 = new A({
		props: {
		href: "/blog",
		$$slots: { default: [create_default_slot_10] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var a2 = new A({
		props: {
		href: "https://github.com/btakita/briantakita.com",
		$$slots: { default: [create_default_slot_9] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var a3 = new A({
		props: {
		href: "/posts/naming-conventions",
		$$slots: { default: [create_default_slot_8] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var a4 = new A({
		props: {
		href: "https://v3.svelte.technology/",
		$$slots: { default: [create_default_slot_7] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var a5 = new A({
		props: {
		href: "https://sapper.svelte.technology/",
		$$slots: { default: [create_default_slot_6] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var a6 = new A({
		props: {
		href: "https://holochain.org/",
		$$slots: { default: [create_default_slot_5] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var a7 = new A({
		props: {
		href: "https://medium.com/@sunyatax",
		$$slots: { default: [create_default_slot_4] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var a8 = new A({
		props: {
		href: "https://holo.host/project/junto/",
		$$slots: { default: [create_default_slot_3] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var a9 = new A({
		props: {
		href: "https://github.com/holochain/holochain-proto/blob/whitepaper/holochain.pdf",
		$$slots: { default: [create_default_slot_2] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var a10 = new A({
		props: {
		href: "https://files.holo.host/2017/11/Holo-Currency-White-Paper_2017-11-28.pdf",
		$$slots: { default: [create_default_slot_1] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	var a11 = new A({
		props: {
		href: "https://files.holo.host/2018/03/Holo-Green-Paper.pdf",
		$$slots: { default: [create_default_slot] },
		$$scope: { ctx }
	},
		$$inline: true
	});

	return {
		c: function create() {
			header = element("header");
			p0 = element("p");
			span = element("span");
			date__local.$$.fragment.c();
			t0 = space();
			h2 = element("h2");
			t1 = text("Site Redesign");
			t2 = space();
			p1 = element("p");
			t3 = text("This is my microblog, where I will be posting ideas, news, etc.\n\tIt is ");
			a0.$$.fragment.c();
			t4 = text(".\n\tThere is also a ");
			a1.$$.fragment.c();
			t5 = text(" which contains longer articles.");
			t6 = space();
			p2 = element("p");
			t7 = text("Here's the ");
			a2.$$.fragment.c();
			t8 = text(" for this site.");
			t9 = space();
			h30 = element("h3");
			t10 = text("Naming Conventions");
			t11 = space();
			p3 = element("p");
			t12 = text("I've been experimenting & making progress with ");
			a3.$$.fragment.c();
			t13 = text(".\n\tNaming conventions for immutable entities has proven to reduce incidental complexity.\n\tI'm working on fleshing out the last details & a whitepaper. Please stay tuned.\n\tThis practice has helped me remove incidental complexity from my codebases.");
			t14 = space();
			h31 = element("h3");
			t15 = text("Svelte");
			t16 = space();
			p4 = element("p");
			t17 = text("I'm also a fan of ");
			a4.$$.fragment.c();
			t18 = text(" &\n\t\t");
			a5.$$.fragment.c();
			t19 = text(".\n\tSvelte is provides truly reactive stores & html components.\n\tHtml components mean it's easy for programmers & non-programmers (e.g. designers) to work with.\n\tSvelte is compiled, resulting in a payload that is small, fast, & memory efficient.");
			t20 = space();
			h32 = element("h3");
			t21 = text("Holochain");
			t22 = space();
			p5 = element("p");
			t23 = text("Lately, I have been turned onto ");
			a6.$$.fragment.c();
			t24 = text(".\n\tThanks to ");
			a7.$$.fragment.c();
			t25 = text(",\n\t\tfounder of ");
			a8.$$.fragment.c();
			t26 = text(" for introducing me to this technology.");
			t27 = space();
			p6 = element("p");
			t28 = text("I've read through:");
			t29 = space();
			ul = element("ul");
			li0 = element("li");
			a9.$$.fragment.c();
			t30 = space();
			li1 = element("li");
			a10.$$.fragment.c();
			t31 = space();
			li2 = element("li");
			a11.$$.fragment.c();
			t32 = space();
			p7 = element("p");
			t33 = text("I encourage you to read these papers,\n\t\tas they explain the state of distributed networks & the innovations\n\t\tthat Holochain & the Holo currency bring.");
			this.h();
		},

		l: function claim(nodes) {
			header = claim_element(nodes, "HEADER", {}, false);
			var header_nodes = children(header);

			p0 = claim_element(header_nodes, "P", { class: true }, false);
			var p0_nodes = children(p0);

			span = claim_element(p0_nodes, "SPAN", {}, false);
			var span_nodes = children(span);

			date__local.$$.fragment.l(span_nodes);
			span_nodes.forEach(detach);
			p0_nodes.forEach(detach);
			t0 = claim_text(header_nodes, "\n\t");

			h2 = claim_element(header_nodes, "H2", {}, false);
			var h2_nodes = children(h2);

			t1 = claim_text(h2_nodes, "Site Redesign");
			h2_nodes.forEach(detach);
			header_nodes.forEach(detach);
			t2 = claim_text(nodes, "\n\n");

			p1 = claim_element(nodes, "P", {}, false);
			var p1_nodes = children(p1);

			t3 = claim_text(p1_nodes, "This is my microblog, where I will be posting ideas, news, etc.\n\tIt is ");
			a0.$$.fragment.l(p1_nodes);
			t4 = claim_text(p1_nodes, ".\n\tThere is also a ");
			a1.$$.fragment.l(p1_nodes);
			t5 = claim_text(p1_nodes, " which contains longer articles.");
			p1_nodes.forEach(detach);
			t6 = claim_text(nodes, "\n\n");

			p2 = claim_element(nodes, "P", {}, false);
			var p2_nodes = children(p2);

			t7 = claim_text(p2_nodes, "Here's the ");
			a2.$$.fragment.l(p2_nodes);
			t8 = claim_text(p2_nodes, " for this site.");
			p2_nodes.forEach(detach);
			t9 = claim_text(nodes, "\n\n");

			h30 = claim_element(nodes, "H3", {}, false);
			var h30_nodes = children(h30);

			t10 = claim_text(h30_nodes, "Naming Conventions");
			h30_nodes.forEach(detach);
			t11 = claim_text(nodes, "\n\n");

			p3 = claim_element(nodes, "P", {}, false);
			var p3_nodes = children(p3);

			t12 = claim_text(p3_nodes, "I've been experimenting & making progress with ");
			a3.$$.fragment.l(p3_nodes);
			t13 = claim_text(p3_nodes, ".\n\tNaming conventions for immutable entities has proven to reduce incidental complexity.\n\tI'm working on fleshing out the last details & a whitepaper. Please stay tuned.\n\tThis practice has helped me remove incidental complexity from my codebases.");
			p3_nodes.forEach(detach);
			t14 = claim_text(nodes, "\n\n");

			h31 = claim_element(nodes, "H3", {}, false);
			var h31_nodes = children(h31);

			t15 = claim_text(h31_nodes, "Svelte");
			h31_nodes.forEach(detach);
			t16 = claim_text(nodes, "\n\n");

			p4 = claim_element(nodes, "P", {}, false);
			var p4_nodes = children(p4);

			t17 = claim_text(p4_nodes, "I'm also a fan of ");
			a4.$$.fragment.l(p4_nodes);
			t18 = claim_text(p4_nodes, " &\n\t\t");
			a5.$$.fragment.l(p4_nodes);
			t19 = claim_text(p4_nodes, ".\n\tSvelte is provides truly reactive stores & html components.\n\tHtml components mean it's easy for programmers & non-programmers (e.g. designers) to work with.\n\tSvelte is compiled, resulting in a payload that is small, fast, & memory efficient.");
			p4_nodes.forEach(detach);
			t20 = claim_text(nodes, "\n\n");

			h32 = claim_element(nodes, "H3", {}, false);
			var h32_nodes = children(h32);

			t21 = claim_text(h32_nodes, "Holochain");
			h32_nodes.forEach(detach);
			t22 = claim_text(nodes, "\n\n");

			p5 = claim_element(nodes, "P", {}, false);
			var p5_nodes = children(p5);

			t23 = claim_text(p5_nodes, "Lately, I have been turned onto ");
			a6.$$.fragment.l(p5_nodes);
			t24 = claim_text(p5_nodes, ".\n\tThanks to ");
			a7.$$.fragment.l(p5_nodes);
			t25 = claim_text(p5_nodes, ",\n\t\tfounder of ");
			a8.$$.fragment.l(p5_nodes);
			t26 = claim_text(p5_nodes, " for introducing me to this technology.");
			p5_nodes.forEach(detach);
			t27 = claim_text(nodes, "\n\n");

			p6 = claim_element(nodes, "P", {}, false);
			var p6_nodes = children(p6);

			t28 = claim_text(p6_nodes, "I've read through:");
			p6_nodes.forEach(detach);
			t29 = claim_text(nodes, "\n\n");

			ul = claim_element(nodes, "UL", {}, false);
			var ul_nodes = children(ul);

			li0 = claim_element(ul_nodes, "LI", {}, false);
			var li0_nodes = children(li0);

			a9.$$.fragment.l(li0_nodes);
			li0_nodes.forEach(detach);
			t30 = claim_text(ul_nodes, "\n\t");

			li1 = claim_element(ul_nodes, "LI", {}, false);
			var li1_nodes = children(li1);

			a10.$$.fragment.l(li1_nodes);
			li1_nodes.forEach(detach);
			t31 = claim_text(ul_nodes, "\n\t");

			li2 = claim_element(ul_nodes, "LI", {}, false);
			var li2_nodes = children(li2);

			a11.$$.fragment.l(li2_nodes);
			li2_nodes.forEach(detach);
			ul_nodes.forEach(detach);
			t32 = claim_text(nodes, "\n\n");

			p7 = claim_element(nodes, "P", {}, false);
			var p7_nodes = children(p7);

			t33 = claim_text(p7_nodes, "I encourage you to read these papers,\n\t\tas they explain the state of distributed networks & the innovations\n\t\tthat Holochain & the Holo currency bring.");
			p7_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			add_location(span, file, 6, 17, 157);
			p0.className = "date";
			add_location(p0, file, 6, 1, 141);
			add_location(h2, file, 7, 1, 221);
			add_location(header, file, 5, 0, 131);
			add_location(p1, file, 10, 0, 255);
			add_location(p2, file, 16, 0, 444);
			add_location(h30, file, 20, 0, 550);
			add_location(p3, file, 22, 0, 579);
			add_location(h31, file, 29, 0, 942);
			add_location(p4, file, 31, 0, 959);
			add_location(h32, file, 39, 0, 1347);
			add_location(p5, file, 41, 0, 1367);
			add_location(p6, file, 47, 0, 1628);
			add_location(li0, file, 50, 1, 1661);
			add_location(li1, file, 51, 1, 1781);
			add_location(li2, file, 52, 1, 1898);
			add_location(ul, file, 49, 0, 1655);
			add_location(p7, file, 55, 0, 1998);
		},

		m: function mount(target, anchor) {
			insert(target, header, anchor);
			append(header, p0);
			append(p0, span);
			mount_component(date__local, span, null);
			append(header, t0);
			append(header, h2);
			append(h2, t1);
			insert(target, t2, anchor);
			insert(target, p1, anchor);
			append(p1, t3);
			mount_component(a0, p1, null);
			append(p1, t4);
			mount_component(a1, p1, null);
			append(p1, t5);
			insert(target, t6, anchor);
			insert(target, p2, anchor);
			append(p2, t7);
			mount_component(a2, p2, null);
			append(p2, t8);
			insert(target, t9, anchor);
			insert(target, h30, anchor);
			append(h30, t10);
			insert(target, t11, anchor);
			insert(target, p3, anchor);
			append(p3, t12);
			mount_component(a3, p3, null);
			append(p3, t13);
			insert(target, t14, anchor);
			insert(target, h31, anchor);
			append(h31, t15);
			insert(target, t16, anchor);
			insert(target, p4, anchor);
			append(p4, t17);
			mount_component(a4, p4, null);
			append(p4, t18);
			mount_component(a5, p4, null);
			append(p4, t19);
			insert(target, t20, anchor);
			insert(target, h32, anchor);
			append(h32, t21);
			insert(target, t22, anchor);
			insert(target, p5, anchor);
			append(p5, t23);
			mount_component(a6, p5, null);
			append(p5, t24);
			mount_component(a7, p5, null);
			append(p5, t25);
			mount_component(a8, p5, null);
			append(p5, t26);
			insert(target, t27, anchor);
			insert(target, p6, anchor);
			append(p6, t28);
			insert(target, t29, anchor);
			insert(target, ul, anchor);
			append(ul, li0);
			mount_component(a9, li0, null);
			append(ul, t30);
			append(ul, li1);
			mount_component(a10, li1, null);
			append(ul, t31);
			append(ul, li2);
			mount_component(a11, li2, null);
			insert(target, t32, anchor);
			insert(target, p7, anchor);
			append(p7, t33);
			current = true;
		},

		p: function update(changed, ctx) {
			var a0_changes = {};
			if (changed.$$scope) a0_changes.$$scope = { changed, ctx };
			a0.$set(a0_changes);

			var a1_changes = {};
			if (changed.$$scope) a1_changes.$$scope = { changed, ctx };
			a1.$set(a1_changes);

			var a2_changes = {};
			if (changed.$$scope) a2_changes.$$scope = { changed, ctx };
			a2.$set(a2_changes);

			var a3_changes = {};
			if (changed.$$scope) a3_changes.$$scope = { changed, ctx };
			a3.$set(a3_changes);

			var a4_changes = {};
			if (changed.$$scope) a4_changes.$$scope = { changed, ctx };
			a4.$set(a4_changes);

			var a5_changes = {};
			if (changed.$$scope) a5_changes.$$scope = { changed, ctx };
			a5.$set(a5_changes);

			var a6_changes = {};
			if (changed.$$scope) a6_changes.$$scope = { changed, ctx };
			a6.$set(a6_changes);

			var a7_changes = {};
			if (changed.$$scope) a7_changes.$$scope = { changed, ctx };
			a7.$set(a7_changes);

			var a8_changes = {};
			if (changed.$$scope) a8_changes.$$scope = { changed, ctx };
			a8.$set(a8_changes);

			var a9_changes = {};
			if (changed.$$scope) a9_changes.$$scope = { changed, ctx };
			a9.$set(a9_changes);

			var a10_changes = {};
			if (changed.$$scope) a10_changes.$$scope = { changed, ctx };
			a10.$set(a10_changes);

			var a11_changes = {};
			if (changed.$$scope) a11_changes.$$scope = { changed, ctx };
			a11.$set(a11_changes);
		},

		i: function intro(local) {
			if (current) return;
			date__local.$$.fragment.i(local);

			a0.$$.fragment.i(local);

			a1.$$.fragment.i(local);

			a2.$$.fragment.i(local);

			a3.$$.fragment.i(local);

			a4.$$.fragment.i(local);

			a5.$$.fragment.i(local);

			a6.$$.fragment.i(local);

			a7.$$.fragment.i(local);

			a8.$$.fragment.i(local);

			a9.$$.fragment.i(local);

			a10.$$.fragment.i(local);

			a11.$$.fragment.i(local);

			current = true;
		},

		o: function outro(local) {
			date__local.$$.fragment.o(local);
			a0.$$.fragment.o(local);
			a1.$$.fragment.o(local);
			a2.$$.fragment.o(local);
			a3.$$.fragment.o(local);
			a4.$$.fragment.o(local);
			a5.$$.fragment.o(local);
			a6.$$.fragment.o(local);
			a7.$$.fragment.o(local);
			a8.$$.fragment.o(local);
			a9.$$.fragment.o(local);
			a10.$$.fragment.o(local);
			a11.$$.fragment.o(local);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(header);
			}

			date__local.$destroy();

			if (detaching) {
				detach(t2);
				detach(p1);
			}

			a0.$destroy();

			a1.$destroy();

			if (detaching) {
				detach(t6);
				detach(p2);
			}

			a2.$destroy();

			if (detaching) {
				detach(t9);
				detach(h30);
				detach(t11);
				detach(p3);
			}

			a3.$destroy();

			if (detaching) {
				detach(t14);
				detach(h31);
				detach(t16);
				detach(p4);
			}

			a4.$destroy();

			a5.$destroy();

			if (detaching) {
				detach(t20);
				detach(h32);
				detach(t22);
				detach(p5);
			}

			a6.$destroy();

			a7.$destroy();

			a8.$destroy();

			if (detaching) {
				detach(t27);
				detach(p6);
				detach(t29);
				detach(ul);
			}

			a9.$destroy();

			a10.$destroy();

			a11.$destroy();

			if (detaching) {
				detach(t32);
				detach(p7);
			}
		}
	};
}

class _20190403 extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, null, create_fragment, safe_not_equal, []);
	}
}

export default _20190403;
//# sourceMappingURL=20190403.de5bbbaf.js.map
